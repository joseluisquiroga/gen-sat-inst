%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: sgen2.dvi
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips sgen2 -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2010.04.22:1859
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (sgen2.dvi)
@start /Fa 134[33 33 2[37 21 29 29 1[37 37 37 54 21 33
1[21 37 37 21 33 37 33 37 37 12[42 37 46 1[46 54 50 62
42 1[33 25 54 1[46 46 54 50 46 46 6[25 1[37 2[37 37 3[37
1[19 25 19 41[37 2[{TeXBase1Encoding ReEncodeFont}47
74.7198 /Times-Italic rf
%DVIPSBitmapFont: Fb cmtt10 10 27
/Fb 27 123 df<147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF147825267DAB
2C>43 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>46
D<1507ED0F80151FA2153F16005D157E15FE5D14015D14035DA214075D140F5D141F5D14
3F92C7FC5C147E14FE5CA213015C13035C13075C130F5C131F5CA2133F91C8FC5B137E13
FE5B12015B12035B12075BA2120F5B121F5B123F90C9FC5A127E12FE5AA25A127821417B
B92C>I<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE0
004848137EA248487FA248C7EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C14
0F007E15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901
FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>I<EB0FF890387FFF8048B512
E00007804814FC391FF80FFE393FE001FF903880007F48C7EA3F80007E141F00FE15C015
0F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16005D15FE4A5A14034A5A4A
5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03C04848
EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>50 D<EB07FCEB3FFF90B512C048
8048803907FC07F8390FF001FC48486C7ED83F80137E157F48C77E007EEC1F8012FE5AED
0FC0A416E0A37E127E007F141F7E6D133F6C6C137F390FF001FF3807FC0F6CB6FC6C14F7
6C14C7013F130FD90FF813C090C7FCA2151F1680153F1600000F5C486C137E486C13FE4A
5A4A5A14079038801FF0391FE07FE090B55A6C91C7FC6C5B000113F838007FC023357CB3
2C>57 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F80EA7FC0
EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C>I<90381FF80790B5EA0F804814CF000714
FF5A381FF01F383FC003497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC
127F7FEA3FE0EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07
FF02001380153FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0
EB7F009038FE01FF90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>83
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E484813
1890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03
FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>99 D<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<ED03F8903907F8
0FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1C
D9C0001300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D4814
80D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3F
C0001FF848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F8013
03D83FE0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387E
A42C>103 D<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138
F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E014002933
7FB22C>I<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA00
07B3A8007FB512FCB612FEA36C14FC1F3479B32C>I<387FFFE0B57EA37EEA0003B3B3A5
007FB61280B712C0A36C158022337BB22C>108 D<3A7F83F007E09039CFFC1FF83AFFDF
FE3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301
C01380B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C
>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807F
EC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB
1FFF017F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7
121F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F00
6D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<39
7FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F0
49EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F91
38801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA3
6C5B27367FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1EC
FF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA3
2C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0
007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE00
78147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F81480
39701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03
C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7E
AD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE
03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB514FE14
8314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2
017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D
90C7FCA26D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB
01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3
CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C>I<
003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF004A5A003C495AC7485A4A5A4A
5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49C8FC4848EB01E04848EB03F048
5A485A485A485A485AB7FCA46C15E024247DA32C>122 D E
%EndDVIPSBitmapFont
/Fc 140[37 25 2[42 42 1[17 2[17 1[42 1[42 42 37 48[42
50[{TeXBase1Encoding ReEncodeFont}11 74.7198 /Helvetica
rf /Fd 140[42 28 2[46 46 1[18 2[18 1[46 1[46 46 42 48[46
50[{TeXBase1Encoding ReEncodeFont}11 83.022 /Helvetica
rf
%DVIPSBitmapFont: Fe cmex10 10 2
/Fe 2 89 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C
6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600
E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E
7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA270
7F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE
4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70
023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF
0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA24865
5ABFFC666D747B7F78>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy7 7 3
/Ff 3 51 df<137F3801FFC0000713F0380FC1F8381F007C003C131E0038130E0078130F
00707F00F01480481303A56C13070070140000785B0038130E003C131E001F137C380FC1
F86CB45A000113C06C6CC7FC19197C9A22>14 D<13E0EA01F0EA03F8A3EA07F0A313E0A2
120F13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48
D<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048C8FC121E121C123C123812781270
A212F05AA2B7FCA300E0C8FCA27E1270A212781238123C121C121E7E6C7EEA03E0EA01F8
6CB4FC013FB5FC130F130120277AA12D>50 D E
%EndDVIPSBitmapFont
/Fg 209[25 46[{TeXBase1Encoding ReEncodeFont}1 99.6264
/Times-Roman rf
%DVIPSBitmapFont: Fh cmsy10 12 1
/Fh 1 2 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B789E1C>1
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi linew10 10 2
/Fi 2 83 df<1210127C12FE7E7F7F6C7E6C7E6C7E6C7E6C7E6C7E6C7F6C7F6D7E6D7E6D
7E6D7E6D7E6D7E6D7F6D7F6E7E6E7E6E7E6E7E6E7E6E7E6E7F6E7F6F7E6F7E6F7E6F7E6F
7E6F7E6F7F6F7F707E707E707E707E707E707E707F707F717E717E717E717E717E717E71
7F717F727E727E727E727E727E727E727F727F737E737E737E737E737E737E737F737F74
7E747E747E747E747E747E747F747F757E757E757E757E757E757E75138087F47FC01C3F
F41F801C0F5A5A83D653>64 D<154015C04A7E140314074A7E141F143F4A7E14FF5B497F
5B497F5B5B497F90B6FC48815A5A48815A48815AB77E123F000781C6FC011F8013070100
80143F02077F14016E6C1380151F030713C015019238007FE0161FEE07F0EE01F8EE0078
173C170C1702170130305DAF53>82 D E
%EndDVIPSBitmapFont
/Fj 167[30 88[{TeXBase1Encoding ReEncodeFont}1 41.511
/Times-Roman rf
%DVIPSBitmapFont: Fk cmsy10 10 13
/Fk 13 107 df<007FB81280B912C0A26C17803204799641>0 D<0060150600F8150F6C
151F007E153F6C157E6C6C14FC6C6CEB01F86C6CEB03F06C6CEB07E06C6CEB0FC06C6CEB
1F80017EEB3F006D137E6D6C5A90380FC1F8903807E3F0903803F7E06DB45A6D5B6EC7FC
A24A7E497F903803F7E0903807E3F090380FC1F890381F80FC90383F007E017E7F49EB1F
804848EB0FC04848EB07E04848EB03F04848EB01F84848EB00FC48C8127E007E153F4815
1F48150F00601506282874A841>2 D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE
1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB
07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03
FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED
0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FCAE
007FB81280B912C0A26C1780324479B441>20 D<126012F812FEEA7F80EA3FE0EA0FF8EA
03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0
ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0171FEF7F80933801
FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7F
C04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFC
AE007FB81280B912C0A26C1780324479B441>I<D93F801508D9FFF0151C00037F4813FE
487F4814C09026C07FE0143C273F000FF01438003CD907FC147848EB01FE6E6C6C13F000
7091383FC00300F091391FF80FE0486EB5FC030314C06F14806F6C1300EE3FFC0040ED07
F036137B9D41>24 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA
01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9
FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE01
0314FF1300021F13FE283279AD37>50 D<126012F0B3B3B3B3A5B512F014F8A26C13F015
5272BD25>98 D<14301478B3B3B3B3A5387FFFF8B5FCA26C13F015527FBD25>I<387FFF
F0B512F8A214F000F0C7FCB3B3B3B3A51260155272BD25>I<387FFFF0B512F8A27EC712
78B3B3B3B3A5143015527FBD25>I<EC01F8140FEC3F80ECFC00495A495A495AA2130F5C
B3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F
80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>I<12FCEAFFC0EA
07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1F
F0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FC
C8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi7 7 5
/Fl 5 119 df<1238127C12FE12FFA2127F123B1203A31206A3120C1218123812701220
08127A8614>59 D<000FB712E05A9039800FE007D81E009038C001C05A0038011F130012
3000705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25C
A21303A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727>84
D<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C123E003C130012
7CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03F8171B7C991E>
99 D<3807803E390FE0FF803818F3C13930F703C0EBFE073860FC0F13F8158039C1F007
0091C7FC1201A2485AA4485AA4485AA448C8FCA2120E1A1B7D991F>114
D<3903E001C03907F003E0380C7807EA187C0030130314011260EBF80000C014C0A2EA01
F0A2EC0180EA03E0A2EC0300EA07C0A21406A25CA200035B6D5A3801F0E06CB45A013FC7
FC1B1B7D9921>118 D E
%EndDVIPSBitmapFont
/Fm 133[32 37 37 1[37 42 23 32 32 42 42 42 42 60 23 37
23 23 42 42 23 37 42 37 42 42 14[51 3[55 4[28 2[51 51
1[55 16[42 42 2[21 28 41[42 42 2[{TeXBase1Encoding ReEncodeFont}37
83.022 /Times-Italic rf /Fn 136[60 2[28 4[42 46 69 23
46 1[23 1[42 1[37 46 37 1[42 20[55 7[60 2[60 11[42 42
42 42 42 2[21 43[46 2[{TeXBase1Encoding ReEncodeFont}23
83.022 /Times-Bold rf
%DVIPSBitmapFont: Fo cmmi10 10 21
/Fo 21 121 df<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E
7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049
486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE
167F4816800070151F293B7CB930>21 D<121C127FEAFF80A5EA7F00121C0909798817>
58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<150C151E153EA2153C157CA2157815F8A215F01401A215E014
03A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C
1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B12
03A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537B
BD2A>61 D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF
9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0
EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FC
ED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC048
48CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>I<0103B7FC4916E018F890
3B0007F80007FE4BEB00FFF03F80020FED1FC0180F4B15E0F007F0021F1503A24B15F818
01143F19FC5DA2147FA292C8FCA25C18035CA2130119F84A1507A2130319F04A150FA201
0717E0181F4A16C0A2010FEE3F80A24AED7F00187E011F16FE4D5A4A5D4D5A013F4B5A4D
5A4A4A5A057FC7FC017F15FEEE03FC91C7EA0FF049EC7FC0B8C8FC16FC16C03E397DB845
>68 D<0103B500F8903807FFFC5BA290260007F8C813804BEDFC0019F0020F4B5AF00380
4B4AC7FC180E021F1538604B5CEF0380023F4AC8FC170E4B133C1770027F5C4C5ADB0007
C9FC160E4A5B167E4A13FE4B7E01015B92380E7F80ECFC1CED383F010301E07FECFDC04A
486C7EECFF00D907FC6D7E5C4A130783130F707E5C1601011F81A24A6D7EA2013F6F7EA2
4A143F84137F717E91C8123F496C81B60107B512C0A26146397DB847>75
D<902603FFF893383FFF80496081D900079438FF80000206DC01BFC7FCA2020E4C5A1A7E
020C1606190CDA1C7E16FE4F5A02181630A20238166162023016C1F00181DA703F158395
380303F002601506A202E0ED0C076202C01518183001016D6C140F06605B028015C0A201
03923801801FDD03005B140092380FC00649173F4D91C8FC01065DA2010E4B5B4D137E13
0C6F6C5A011C17FEDCE1805B011802E3C7FCA2013802E6130104EC5C1330ED03F8017016
034C5C01F05CD807FC4C7EB500E0D9C007B512F01680150151397CB851>77
D<0103B612F849EDFF8018E0903B0007F8001FF84BEB03FCEF00FE020F157FA24BEC3F80
A2021F16C0A25DA2143FF07F805DA2027FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80
057FC7FC0101EC07F891B612E094C8FC9139FC000FC00103EC03F0707E4A6D7E83130717
7E5C177F010F5D5F5CA2011F1401A25CA2133F16034A4A1360A2017F17E019C091C71401
496C01011480B61503933900FE0700EF7E0ECAEA1FFCEF07F03B3B7DB83F>82
D<91B712FCA25B9239E00007F84AC7EA0FF0D903F8EC1FE04AEC3FC04AEC7F804A150049
485C91C7485A4C5A010E4A5A4C5A010C4A5A011C4A5A01185D167F4CC7FC90C7485A4B5A
4B5A4B5A5E151F4B5A4B5A4BC8FC4A5A4A5A4A5A5D140F4A5A4A5A4A48130C4AC7FC495A
4A141C01031518495A494814384948143049481470495A49C812F0495D00011501484814
0348484A5A4848140F4848141F4848EC7F804848EB07FF90B7FCB8FC94C7FC36397BB839
>90 D<1578EC01FEEC07C6EC0F861507EC1E03143E147C1507ECF806A2EB01F00103130E
ECE00C1307A2ECC01C010F1318153890381F80301570156090383F00E015C01401017F13
80EB7E03EC07001406EBFE0E495A5C143000011370495AEBF9C0EBFB8001FFC7FC5B5B48
5AA25BA4485A120F121DEA39F0127100E1140C0080143C0000147015E090387801C0EC07
8090383C1E00EB1FF8EB07E0203C7FBA23>96 D<147E903803FF8090390FC1C38090391F
00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E
90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F1330
003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C
>I<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E7
07C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A127E
A2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C383C
01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807E03C
90380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F14384848
1300A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E039
0F8007C03907C03F003801FFF838003FC020267DA424>I<EC07E0EC1FF891387C1C3890
3901F80EFC903803F007903807E003EB0FC090381F8001D93F0013F85B017E130313FE16
F0485A150712034914E0A2150F12074914C0A2151FA2491480A2153FA2160000035C6D5B
00015B4A5A3900F8077E90387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403001E5C
123F387F80075D00FF495A49485A4849C7FC007C137E383C01F8381FFFE0000390C8FC26
367FA428>103 D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B01
7EEB07C0ED1FF0ED783801FEEBE0F89039FC01C1FCEC0383EC07070001130ED9F81C13F8
91383803F091387001E0000349C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F838
0FE0FEEBC07F6E7E141F001F80D9800F1330A21670003F011F136001001380A216E04815
C0007E1481020F1380158300FE903807870048EB03FE0038EB00F8263B7CB92B>107
D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00
705B00605BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E12
0349010F133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE070000
1FEC0F0E49EB07FC0007C7EA01F02C267EA432>110 D<02FC13C0903803FF0190380F83
8390383F01C790397E00EF8049137F485A4848133F000715005B485A001F5C157E485AA2
007F14FE90C75AA3481301485CA31403485CA314075D140F127C141F007E495A003E137F
381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190387F
FFF0A322357DA425>113 D<3903E001F83907F807FE390E3C1E07391C3E381F3A183F70
3F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA21200
13FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267EA425>I<01F8
EB03C0D803FEEB07E0D8070F130F000E018013F0121C12180038140700301403D8701F13
0112601500D8E03F14E000C090C7FC5BEA007E16C013FE5B1501000115805B1503160012
03495B1506150E150C151C151815385D00015C6D485A6C6C485AD97E0FC7FCEB1FFEEB07
F024267EA428>118 D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801
C09038383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC
1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F
81143801835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00F
FC3907C003F029267EA42F>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 14
/Fp 14 62 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA21207
5B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203
A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812
F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<EB03F8EB1FFF90387E0FC0
9038F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A6
00FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C
485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48 D<EB01C013031307131F
13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E
3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA5
6CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A
495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A48
5CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E
0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB
1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F8048
7EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF000
01B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114031407A2140F
141F141B14331473146314C313011483EB030313071306130C131C131813301370136013
C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B5
12F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC
38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7E
C87EA28181A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C
6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC
3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485A
A2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E
07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C
7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC0
6D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C05A168016000070C7
12060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA2
14F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<
EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E
141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C0
6C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380
481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C0
12781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D9
07FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48
486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F00
1F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7
FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F
807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<007FB812F8B912FCA26C17F8CC
FCAE007FB812F8B912FCA26C17F836167B9F41>61 D E
%EndDVIPSBitmapFont
/Fq 135[50 2[55 33 39 44 1[55 50 55 83 28 55 1[28 1[50
33 44 55 44 55 50 11[72 1[55 72 8[39 1[78 61 66 72 72
66 11[50 50 50 50 50 50 46[55 2[{TeXBase1Encoding ReEncodeFont}36
99.6264 /Times-Bold rf
%DVIPSBitmapFont: Fr cmmi9 9 2
/Fr 2 119 df<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C
121C5A5A126009177A8715>59 D<01F0130ED803FC131FD8071EEB3F80EA0E1F121C0038
EB801F0030140F013F130700701300006014035BD8E07E14001240EA00FE495B00011406
5BA2150E0003140C5B151C15181538491330157015606D13E04A5A0001495A6D48C7FC38
00FC1EEB3FF8EB07E021227EA025>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr9 9 8
/Fs 8 62 df<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7
FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A2
6C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<EB0FE0EB7FFCEBF83E3903E00F
803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FE
B2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00
EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A249
7E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB
3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A214
0F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C4913185B48
5A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EB
FFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C013
80A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC
1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F8
6C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<00
0C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF0
7C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FE
A315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF800
0113E038003F801D347CB126>53 D<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B9
12E0A26C17C033147C9C3C>61 D E
%EndDVIPSBitmapFont
/Ft 75[25 11[25 17[37 1[33 33 24[33 37 37 54 37 37 21
29 25 1[37 37 37 58 21 37 21 21 37 37 25 33 37 33 37
33 3[25 1[25 3[71 1[54 46 42 50 1[42 54 54 66 46 54 29
25 54 54 42 46 54 50 50 54 5[21 21 37 37 37 37 37 37
37 37 37 37 21 19 25 19 2[25 25 36[42 42 2[{
TeXBase1Encoding ReEncodeFont}73 74.7198 /Times-Roman
rf /Fu 139[25 29 33 8[21 1[37 3[33 42 37 26[46 4[54 12[37
37 37 37 2[19 46[{TeXBase1Encoding ReEncodeFont}15 74.7198
/Times-Bold rf
%DVIPSBitmapFont: Fv cmsy9 9 2
/Fv 2 25 df<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01
FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1F
F0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC
07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CA
FC12FC1270CBFCAC007FB712FCB812FEA26C16FC2F3E7AB03C>21
D<013F16402601FFE015E04813F8487F4813FF4880D83FC06D1301273E001FE014C048D9
07F8130300786D6C13070070D900FFEB0F8000F091387FE07F486EB512006F5B03075B6F
5B03005B0040ED1F8033127C9B3C>24 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmtt9 9 26
/Fw 26 120 df<EB03C0497EAD007FB512FEB7FCA46C14FE390007E000AD6D5A20227DA7
27>43 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>46
D<1538157C15FCA2140115F8140315F0140715E0140F15C0141F1580143F1500A25C147E
14FE5C13015C13035C13075C130F5CA2131F5C133F91C7FC5B137E13FE5B12015B12035B
A212075B120F5B121F5B123F90C8FC5A127E12FE5AA25A12781E3A7CB327>I<EB07E0EB
3FFC497E90B5FC4814803903FC3FC03907F00FE0390FE007F0EBC003391F8001F8A248C7
12FCA2003E147C007E147EA3007C143E00FC143FAC007E147EA46C14FCA2EB8001001F14
F8EBC003000F14F0EBE0073907F00FE03903FC3FC06CB512806C14006D5A6D5AEB07E020
307DAE27>I<EB3FE03801FFF84813FE000FEBFF804814C0393FE07FE0EB800F397F0007
F0007EEB03F800FE13015A6C14FC1400A3127CC8FCA2140115F8A2140315F01407EC0FE0
EC1FC0143FEC7F80ECFF00495A495A495A495A495A495A495A01FEC7FC485AD807F81378
484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE27>50 D<EB0FF0EB7FFC48B5FC4814
804814C0390FF81FE0391FE007F0393FC003F8EB8001D87F0013FC007E130012FE48147E
A4157F153F157F7E127E007F14FF7E6D5A381FE007380FF01F6CB6FC7E6C143F39007FFC
7F90381FF07E90C7FCA215FCA2140115F8001F1303393F8007F0EC0FE0141FEC3FC09038
C0FF806CB512005C6C13F8000313E0C6138020307DAE27>57 D<121EEA7F80A2EAFFC0A4
EA7F80A2EA1E00C7FCAC121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A20729F27>I<007F
B512E0B612F0A36C14E039001F8000B3B2007FB512E0B612F0A36C14E01C2E7BAD27>73
D<90387FC0E03901FFF1F0000713FF5A5AEA3FE0EB801F387F000F007E130712FE5A1403
A3EC01E06C90C7FC127E127FEA3FC013F86CB47E6C13F86C13FE6CEBFF80C614C0010F13
E0010013F0140FEC07F81403140115FC1400127812FCA46CEB01F8A26C130390388007F0
9038F01FE090B5FC15C0150000F85B38701FF81E307CAE27>83 D<3803FFC0000F13F048
13FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383F
FC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038
807F8022207C9F27>97 D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81
FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6D
EBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13
C048B512E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA6
7E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C13
00EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF8
3F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB
800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<
EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48
C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE39
0FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>I<153F90391FC0
FF80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7E
A66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15
E015F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C1580
007F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027
>103 D<EA7FE0487EA3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEB
FE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E0242E7FAD27>I<EA7FE07F12
FF127FA21201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FC
EBF1FEEBF3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E15
7E3A7FFFC1FFF002C313F8B512E36C13C316F0252E80AD27>107
D<387FFF80B57EA37EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>I<387FE0
7F39FFF1FFC001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0
B500C713F0A36C018313E024207F9F27>110 D<387FE0FFD8FFF313C090B512F0816C80
0003EB81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F
80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FEC7FC91C8FCAC387FFF80B57E
A36C5B23317F9F27>112 D<90380FF03C90383FFE7E90B5FC000314FE5A380FFC1F381F
E007EBC003383F800148C7FC127EA200FE147E5AA67E007E14FEA2007F1301EA3F80EBC0
03381FE007380FF81F6CB5FC7E6C147E38007FFCEB0FF090C7FCAC91381FFFF8A24A13FC
6E13F8A226317E9F27>I<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07
806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C09038003FE014
070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707F
F01C207B9F27>115 D<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE151815
7EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827>I<397FE0
1FF8486C487EA3007F131F00031300B21401A21403EBFC0F6CB612E016F07EEB3FFE9039
0FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A07C000F800EBE0
0100035CA2EBF00300015CA2EBF80700005CA390387C0F80A36D48C7FCA3EB3F3FEB1F3E
A214FE6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FFE000FF15F06D5A497E007F15E0
3A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478A301F7
13F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr6 6 2
/Fx 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmr7 7 6
/Fy 6 55 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301A2130313071306130C131C
131813301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EA
F800A7497E90383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C5C1480D819FC
C7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A212
30127C12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC1927
7DA521>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E91
C7FC5AA21304EB3FC038FCFFF038FDC078EB003CB4133E48131E141FA2481480A4127CA4
003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>
I E
%EndDVIPSBitmapFont
/Fz 107[37 37 24[37 42 42 60 42 42 23 32 28 42 42 42
42 65 23 42 23 23 42 42 28 37 42 37 42 37 3[28 1[28 2[60
78 60 60 51 46 55 1[46 60 60 1[51 60 1[28 60 60 46 51
60 55 55 60 1[37 3[23 23 42 42 42 42 42 42 42 42 42 42
1[21 28 21 2[28 28 28 35[46 46 2[{TeXBase1Encoding ReEncodeFont}72
83.022 /Times-Roman rf /FA 138[66 40 47 53 2[60 66 100
33 2[33 1[60 1[53 66 53 1[60 6[80 5[80 66 2[73 93 5[47
93 3[86 2[86 19[40 45[{TeXBase1Encoding ReEncodeFont}24
119.552 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 1279 448 a FA(Zer)n(o-One)30 b(Designs)f(Pr)n(oduce)1287
598 y(Small)h(Hard)h(SA)-11 b(T)30 b(Instances)1357 890
y Fz(Allen)20 b(V)-9 b(an)20 b(Gelder)1939 860 y Fy(1)1996
890 y Fz(and)g(Iv)n(or)f(Spence)2535 860 y Fy(2)1369
1032 y Fx(1)1441 1064 y Fw(http://www.cse.ucsc.edu/)p
Fv(\030)p Fw(avg)1271 1123 y Fx(2)1342 1155 y Fw
(http://www.cs.qub.ac.uk/)p Fv(\030)p Fw(I.Sp)q(ence)759
1522 y Fu(Abstract.)41 b Ft(Some)18 b(basics)g(of)g(combinatorial)h
(block)f(design)h(are)f(combined)h(with)e(certain)759
1613 y(constraint)26 b(satisf)o(action)h(problems)f(of)g(interest)f(to)
h(the)g(satis\002ability)f(community)-5 b(.)27 b(The)759
1705 y(paper)g(sho)n(ws)f(ho)n(w)g(such)h(combinations)g(lead)f(to)f
(satis\002ability)g(problems,)h(and)h(sho)n(ws)759 1796
y(empirically)c(that)g(these)g(are)g(some)g(of)g(the)g(smallest)f(v)o
(ery)h(hard)h(satis\002ability)e(problems)759 1887 y(e)n(v)o(er)27
b(constructed.)h(P)o(artially)d(balanced)j Fs(\(0)p Fr(;)13
b Fs(1\))27 b Ft(designs)g(\(PB01Ds\))f(are)h(introduced)g(as)759
1979 y(an)c(e)o(xtension)h(of)f(balanced)h(incomplete)f(block)h
(designs)g(\(BIBDs\))d(and)j Fs(\(0)p Fr(;)13 b Fs(1\))23
b Ft(designs.)759 2070 y(Also,)31 b Fs(\(0)p Fr(;)13
b Fs(1\))32 b Ft(dif)n(ference)g(sets)f(are)g(introduced)h(as)f(an)h(e)
o(xtension)g(of)f(certain)g(c)o(yclical)759 2161 y(dif)n(ference)26
b(sets.)f(Constructions)h(based)g(on)f Fs(\(0)p Fr(;)14
b Fs(1\))25 b Ft(dif)n(ference)h(sets)e(enable)i(generation)759
2253 y(of)e(PB01Ds)g(o)o(v)o(er)g(a)f(much)i(wider)e(range)i(of)f
(parameters)g(than)g(is)f(possible)i(for)e(BIBDs.)759
2344 y(Building)f(upon)g(pre)n(vious)g(w)o(ork)g(of)f(Spence,)g(it)f
(is)h(sho)n(wn)h(ho)n(w)f(PB01Ds)g(lead)g(to)g(small,)759
2435 y(v)o(ery)j(hard,)f(unsatis\002able)g(formulas.)g(A)g(ne)n(w)g
(three-dimensional)h(form)f(of)g(combinato-)759 2527
y(rial)16 b(block)h(design)h(is)e(introduced,)h(and)g(leads)g(to)f
(small,)g(v)o(ery)h(hard,)f(satis\002able)g(formulas.)759
2618 y(The)24 b(methods)g(are)f(v)n(alidated)h(on)g(solv)o(ers)g(that)f
(performed)h(well)f(in)g(the)g(SA)-8 b(T)22 b(2009)j(and)759
2709 y(earlier)19 b(competitions.)523 3005 y Fq(1)99
b(Intr)n(oduction)523 3221 y Fz(Combinatorial)34 b(block)g(design)h
(addresses)g(constraint)f(satisf)o(action)h(problems)f(that)i(are)f
(fre-)523 3320 y(quently)23 b(of)i(interest)g(to)f(the)h
(satis\002ability)g(community)-5 b(,)22 b(yet)j(man)o(y)f(of)g(its)i
(results)f(are)g(not)f(well)523 3420 y(kno)n(wn)c(in)i(this)g
(community)-5 b(.)18 b(This)k(short)f(paper)g(sho)n(ws)g(ho)n(w)g(the)o
(y)g(combine)f(with)h(certain)g(con-)523 3520 y(straint)i(satisf)o
(action)f(problems)f(to)h(create)h(v)o(ery)e(hard)g(satis\002ability)i
(problems.)e(The)h(page)g(limit)523 3619 y(forces)k(proofs)f(and)h(man)
o(y)g(other)f(details)i(to)g(be)g(omitted.)e(The)h(Conclusion)g(gi)n(v)
o(es)g(a)h(URL)g(for)523 3719 y(more)19 b(information.)648
3822 y(Our)f(goal)h(is)g(to)g(construct)f(benchmarks)f(with)i
(approximately)d(100)i(v)n(ariables,)g(with)h(o)o(v)o(erall)523
3921 y(size)31 b(v)n(arying)e(linearly)g(with)i(the)f(number)f(of)h(v)n
(ariables,)g(that)g(are)g(v)o(ery)g(hard)f(for)h(all)h(kno)n(wn)523
4021 y(solv)o(ers.)648 4124 y(The)22 b(main)g(ideas)h(are)f(based)h(on)
f Fp(\(0)p Fo(;)14 b Fp(1\))23 b Fz(designs)f(and)g(the)h(ne)n(wly)f
(introduced)e(partially)i(bal-)523 4224 y(anced)j Fp(\(0)p
Fo(;)14 b Fp(1\))27 b Fz(designs)e(\(PB01Ds\),)h(which)g(generalize)e
(the)j(v)o(ery)e(stringent)g(class)i(of)f(balanced)523
4323 y(incomplete)e(block)h(designs)h(\(BIBDs\).)g(Whereas)g(BIBDs)h(e)
o(xist)f(for)g(v)o(ery)e(limited)i(sets)h(of)f(pa-)523
4423 y(rameters,)c Fp(\(0)p Fo(;)14 b Fp(1\))24 b Fz(designs)e(e)o
(xist)i(and)e(can)h(be)h(constructed)d(o)o(v)o(er)h(wider)h(ranges)f
(of)h(parameters,)523 4522 y(and)g(PB01Ds)h(e)o(xtend)e(the)i(range)f
(e)n(v)o(en)f(further)-5 b(.)22 b(T)-6 b(echniques)23
b(for)g(constructing)e Fp(\(0)p Fo(;)14 b Fp(1\))24 b
Fz(designs)523 4622 y(and)18 b(PB01Ds)g(are)g(presented,)f(based)h(on)g
(the)g(ne)n(wly)f(introduced)f(idea)i(of)g Fp(\(0)p Fo(;)c
Fp(1\))k Fz(dif)n(ference)f(sets.)648 4725 y(Building)23
b(upon)h(pre)n(vious)f(w)o(ork)h(of)g(Spence)g([Spe10)n(],)h(Section)f
(3)g(describes)h(ho)n(w)f(to)g(gen-)523 4825 y(erate)31
b(f)o(amilies)g(of)g(small)g(unsatis\002able)g(formulas)e(with)j(re)o
(gularly)c(v)n(arying)i(properties.)f(The)523 4924 y(relationship)19
b(to)h(certain)g(restricted)f(forms)h(of)g(SA)-9 b(T)20
b(is)h(brie\003y)f(discussed.)p eop
%%Page: 2 2
2 1 bop 648 448 a Fz(A)22 b(ne)n(w)g(three-dimensional)c(form)j(of)h
(combinatorial)d(block)i(design)g(is)i(introduced)c(in)j(Sec-)523
548 y(tion)i(4,)f(which)g(leads)h(to)g(a)g(generator)e(for)h(f)o
(amilies)h(of)g(small)g(satis\002able)h(formulas)d(with)i(re)o(gu-)523
648 y(larly)c(v)n(arying)e(properties,)h(again)g(follo)n(wing)g(and)g
(e)o(xtending)f(earlier)i(w)o(ork)f(of)h(Spence.)648
747 y(The)26 b(generators)e(are)i(v)n(alidated)f(on)h(solv)o(ers)g
(that)h(performed)c(well)k(in)f(the)h(SA)-9 b(T)26 b(2009)f(and)523
847 y(earlier)d(competitions.)f(Experiments)g(are)i(presented)e(that)i
(demonstrate)e(that)i(these)g(generators)523 946 y(produce)f(some)j(of)
f(the)g(smallest)i(v)o(ery)d(hard)g(satis\002ability)i(problems)e(e)n
(v)o(er)h(constructed.)f(The)o(y)523 1046 y(are)c(orders)f(of)g
(magnitude)f(smaller)i(than)f(random)f(3-CNF)i(formulas)e(of)i
(comparable)d(dif)n(\002culty)-5 b(.)523 1146 y(Whereas)29
b(random)f(formulas)f(are)i(often)g(criticized)f(for)h(ha)n(ving)f(no)h
(structure,)f(and)g(therefore)523 1245 y(not)j(representati)n(v)o(e)f
(of)h(\223real)g(w)o(orld\224)g(problems,)f(our)g(formulas)g(are)i
(highly)e(structured)g(and)523 1345 y(represent)23 b(certain)g
(resource)g(allocation)g(problems.)f(Therefore,)f(we)j(hope)f(that)h
(the)o(y)f(might)h(be)523 1445 y(useful)30 b(in)h(the)g(study)f(of)g
(ho)n(w)h(to)g(further)e(impro)o(v)o(e)f(solv)o(ers)i(aimed)h(at)g
(practical)f(application)523 1544 y(problems.)523 1795
y Fq(2)99 b(Combinatorial)25 b(Block)g(Designs)523 1979
y Fz(The)d(study)f(of)h(combinatorial)e(block)h(designs)h(dates)g(back)
g(to)g(the)g(1840s,)f(and)h(has)g(a)g(rich)g(liter)n(-)523
2079 y(ature.)i(A)h(book)d(by)i(Ian)g(Anderson)f([And90)n(])h(pro)o
(vides)f(an)h(accessible)h(treatment)e(of)h(the)h(\002eld,)523
2178 y(from)j(introductory)f(through)g(adv)n(anced)g(topics,)i(with)h
(emphasis)f(on)f(construction)g(methods.)523 2278 y(V)-9
b(arious)22 b(unattrib)n(uted)f(f)o(acts)i(about)f(combinatorial)f
(designs)h(in)h(this)h(paper)e(may)g(be)h(found,)e(to-)523
2378 y(gether)j(with)g(citations,)g(in)h(this)g(book.)e(In)h(general,)f
(we)i(follo)n(w)e(this)i(book')-5 b(s)24 b(terminology)-5
b(,)21 b(and)523 2477 y(we)e(thank)f(the)h(author)e(for)h(pro)o(viding)
e(clari\002cations)i(and)g(further)f(insights)i(by)f(email.)h(Ho)n(we)n
(v)o(er)m(,)523 2577 y(we)g(present)e(concepts)h(in)g(a)h(dif)n(ferent)
d(order)m(,)h(re\003ecting)g(our)h(application)e(of)i(them)g(in)h(this)
f(paper)-5 b(.)523 2733 y Fn(De\002nition)20 b(2.1.)40
b Fz(A)20 b Fm(balanced)d Fp(\(0)p Fo(;)d Fp(1\))p Fm(design)19
b Fz(\()p Fp(\(0)p Fo(;)14 b Fp(1\))p Fz(design)j(for)i(short\))g(is)h
(an)f(undirected)e(bipar)n(-)523 2832 y(tite)26 b(graph)e(on)h(tw)o(o)h
(collections)f(of)g(v)o(ertices,)g(called)g Fm(objects)g
Fz(and)g Fm(bloc)n(ks)p Fz(,)g(such)h(that)f(an)o(y)g(pair)523
2932 y(of)20 b(objects)h(has)f(edges)g(to)h(at)g(most)g(one)f(block)f
(in)i(common,)d(and)i(an)o(y)g(pair)g(of)g(blocks)g(has)h(edges)523
3031 y(to)29 b(at)h(most)f(one)f(object)h(in)g(common.)e(Each)i(object)
f(is)i(incident)e(upon)g(the)h(same)h(number)d(of)523
3131 y(blocks,)18 b(and)g(each)h(block)e(is)j(incident)e(upon)f(the)i
(same)g(number)e(of)i(objects;)f(ho)n(we)n(v)o(er)f(these)i(tw)o(o)523
3231 y(numbers)g(may)g(be)i(dif)n(ferent.)648 3330 y(Blocks)j(are)h
(often)f(vie)n(wed)g(as)h(sets)h(of)f(the)f(objects)h(to)g(which)f(the)
o(y)g(are)g(adjacent.)g(\(This)h(is)523 3430 y(why)d(we)h(used)g(the)g
(phrase)f(\223collection)g(of)h(v)o(ertices\224)f(for)g(blocks)g(and)h
(objects.\))f(W)-7 b(e)24 b(shall)f(also)523 3530 y(sometimes)28
b(vie)n(w)h(an)f(object)g(as)h(the)f(set)i(of)e(blocks)f(that)i
(contain)e(it.)i(Thus)f(we)h(say)g(a)g(pair)f(of)523
3629 y(blocks)20 b Fm(inter)o(sects)h Fz(in)f(certain)g(objects,)f(and)
h(a)h(pair)f(of)f(objects)h Fm(inter)o(sects)i Fz(in)e(certain)g
(blocks.)648 3729 y(A)k(bipartite)f(graph)g(is)i(con)m(v)o(eniently)c
(represented)h(by)i(its)h Fm(incidence)d(matrix)j Fo(M)9
b Fz(,)24 b(in)g(which)523 3828 y(each)c(ro)n(w)g(corresponds)f(to)h
(an)h(object)f(and)g(each)g(column)f(corresponds)f(to)j(a)g(block.)e
(In)i(f)o(act,)f(we)523 3928 y(often)e(think)g(of)g(the)h(incidence)e
(matrix)h(as)i Fm(being)e Fz(the)g(design.)g(Entries)h(in)f
Fo(M)28 b Fz(are)19 b(either)f Fm(null)h Fz(or)f(a)523
4028 y Fm(\003a)o(g)p Fz(.)i(When)g(doing)f(arithmetic)h(on)g
Fo(M)9 b Fz(,)20 b(nulls)h(are)f(treated)g(as)h(0)g(and)f(\003ags)g(as)
i(1,)e(b)n(ut)g(\003ags)h(might)523 4127 y(contain)d(other)g
(information)e(in)j(some)g(cases.)g(In)f(diagrams,)g(nulls)h(are)f
(blank)g(and)g(\003ags)i(are)e(\223X.)-6 b(\224)648 4227
y(The)31 b(constraint)g(on)h(intersections)f(can)h(be)g(described)f
(using)h(the)g(idea)g(of)g(a)g(quadrangle)523 4327 y(in)f(a)h(matrix)f
Fo(M)9 b Fz(.)31 b(A)g Fm(quadr)o(angle)e Fz(is)j(a)g(set)g(of)f(four)f
(\003ags)h(\(or)g(1')-5 b(s\))31 b(at)h(locations)e Fo(M)9
b Fp(\()p Fo(r)3190 4339 y Fy(1)3228 4327 y Fo(;)28 b(c)3315
4339 y Fy(1)3352 4327 y Fp(\))p Fz(,)523 4426 y Fo(M)9
b Fp(\()p Fo(r)682 4438 y Fy(1)720 4426 y Fo(;)27 b(c)806
4438 y Fy(2)844 4426 y Fp(\))p Fz(,)21 b Fo(M)9 b Fp(\()p
Fo(r)1077 4438 y Fy(2)1115 4426 y Fo(;)28 b(c)1202 4438
y Fy(1)1239 4426 y Fp(\))p Fz(,)22 b Fo(M)9 b Fp(\()p
Fo(r)1473 4438 y Fy(2)1510 4426 y Fo(;)28 b(c)1597 4438
y Fy(2)1634 4426 y Fp(\))p Fz(,)22 b(forming)e(a)h(rectangle.)f(The)h
(quadrangle)e(is)j(a)g(forbidden)523 4526 y(pattern)d(in)i
Fo(M)9 b Fz(.)648 4625 y(F)o(ollo)n(wing)22 b(the)i(con)m(v)o(entions)e
(in)i(the)g(\002eld,)g Fo(v)k Fz(denotes)23 b(the)h(number)f(of)g
(objects,)h Fo(b)g Fz(denotes)523 4725 y(the)h(number)e(of)i(blocks,)f
Fo(k)29 b Fz(denotes)24 b(the)h Fm(de)m(gr)m(ee)f Fz(of)h(each)g(block)
f(\(i.e.,)h(the)g(number)e(of)i(objects)523 4825 y(incident)c(upon)g
(it\),)h(and)f Fo(r)k Fz(denotes)d(the)g(de)o(gree)e(of)i(each)f
(object.)h(Clearly)-5 b(,)21 b(the)h(number)e(of)i(non-)523
4924 y(null)e(\003ags)h(\(edges\))e(is)i Fo(v)s(r)26
b Fp(=)c Fo(bk)s Fz(.)p eop
%%Page: 3 3
3 2 bop 648 448 a Fz(The)26 b(design)h(is)h(called)f
Fm(symmetric)h Fz(if)f Fo(v)40 b Fp(=)35 b Fo(b)p Fz(.)27
b(Note)h(that)f(a)g(symmetric)g(design)f(does)h(not,)523
548 y(in)i(general,)e(ha)n(v)o(e)h(a)h(symmetric)f(incidence)f(matrix.)
h(In)h(f)o(act,)f(the)h(order)e(among)h(the)g(ro)n(ws)h(or)523
648 y(columns)22 b(of)g(an)h(incidence)e(matrix)h(is)i(usually)e
(immaterial,)g(because)g(the)o(y)g(correspond)e(to)j(dis-)523
747 y(joint)d(collections.)p 1097 681 67 4 v 1097 747
4 67 v 1160 747 V 1097 750 67 4 v 648 903 a(Note)d(that)h
Fo(M)1060 873 y Fl(T)1130 903 y Fz(represents)e(a)i Fp(\(0)p
Fo(;)c Fp(1\))k Fz(design)f(whene)n(v)o(er)e Fo(M)27
b Fz(does.)17 b(Thus)g(objects)g(and)g(blocks)523 1002
y(ha)n(v)o(e)22 b(dual)g(roles.)h(This)g(duality)f(does)g
Fm(not)i Fz(e)o(xtend)d(to)i(man)o(y)f(other)g(designs.)g(This)h(paper)
e(is)j(pri-)523 1102 y(marily)29 b(concerned)f(with)i(symmetric)f
Fp(\(0)p Fo(;)14 b Fp(1\))29 b Fz(designs,)h(and)f(their)g(relation)g
(to)h(constraint)f(sat-)523 1202 y(isf)o(action)23 b(problems.)e(When)i
(e)n(v)o(ery)e(pair)i(of)f(objects)h(is)h(incident)e(upon)f
Fm(e)n(xactly)i Fz(one)g(block,)e(the)523 1301 y(structure)15
b(is)i(called)f(a)g Fp(\()p Fo(v)s(;)e(k)s(;)g Fp(1\))j
Fz(design,)e(short)h(for)f Fp(\()p Fo(v)s(;)f(k)s(;)g
Fp(1\))j Fm(balanced)d(incomplete)g(bloc)n(k)i(design)523
1401 y Fz(\(BIBD\).)k(In)g(general,)e(a)j(BIBD)g(may)e(be)h(a)h
Fp(\()p Fo(v)s(;)14 b(k)s(;)g(\025)p Fp(\))21 b Fz(design,)e(in)h
(which)g(e)n(v)o(ery)e(pair)i(of)g(objects)g(is)523 1500
y(incident)f(upon)g(e)o(xactly)g Fo(\025)j Fz(blocks.)648
1600 y(The)d(duality)g(enjo)o(yed)f(by)i Fp(\(0)p Fo(;)14
b Fp(1\))19 b Fz(designs)h(is)g(lost)h(for)e(BIBDs)i(because)e(it)h(is)
h(not)e(required)f(in)523 1700 y(a)23 b(BIBD)h(that)e(e)n(v)o(ery)g
(pair)g(of)g(blocks)g(is)i(incident)d(upon)h(e)o(xactly)f(the)i(same)g
(number)e(of)h(objects.)523 1799 y(Duality)16 b(is)h(restored)f(for)f
Fm(symmetric)i Fp(\()p Fo(v)s(;)d(k)s(;)g Fp(1\))j Fz(designs,)f(which)
g(are)g(also)h(called)f Fm(\002nite)g(pr)l(ojective)523
1899 y(planes)p Fz(.)26 b(These)h(designs)g(e)o(xist)g(for)f(v)o(ery)g
(limited)h(combinations)e(of)i Fo(v)k Fz(and)26 b Fo(k)s
Fz(.)h(Ho)n(we)n(v)o(er)m(,)e(the)o(y)523 1999 y(serv)o(e)18
b(as)i(starting)e(points)h(for)f(constructing)f Fp(\(0)p
Fo(;)d Fp(1\))19 b Fz(designs)f(of)h(man)o(y)e(sizes.)j(A)f(\002nite)g
(projecti)n(v)o(e)523 2098 y(plane)h(of)g(order)e Fo(q)24
b Fz(is)d(a)g Fp(\()p Fo(v)s(;)14 b(k)s(;)g Fp(1\))21
b Fz(BIBD,)g(where)e Fo(v)26 b Fp(=)d Fo(q)2151 2068
y Fy(2)2207 2098 y Fp(+)18 b Fo(q)j Fp(+)d(1)j Fz(and)e
Fo(k)26 b Fp(=)d Fo(q)e Fp(+)d(1)p Fz(.)523 2254 y Fn(De\002nition)i
(2.2.)40 b Fz(A)20 b Fm(partially)f(balanced)f Fp(\(0)p
Fo(;)c Fp(1\))19 b Fm(design)g Fz(\(PB01D)g(for)g(short\))f(is)i(lik)o
(e)g(a)g(balanced)523 2353 y Fp(\(0)p Fo(;)14 b Fp(1\))29
b Fz(design)f(e)o(xcept)g(that)h(all)h(block)e(sizes)h(are)g(in)g(a)h
(\002nite)f(set)h Fo(K)k Fz(and)29 b(all)g(object)g(sizes)h(are)523
2453 y(in)e(a)g(\002nite)g(set)g Fo(R)q Fz(.)g(The)f
Fm(size)h Fz(of)g(a)g(block)e(or)i(object)f(is)h(its)h(de)o(gree)d(in)i
(the)f(bipartite)g(graph)f(for)523 2553 y(the)c(design.)f(In)h(this)g
(paper)m(,)f(the)h(cardinalities)f(of)h Fo(K)28 b Fz(and)21
b Fo(R)i Fz(do)f(not)g(e)o(xceed)e(tw)o(o,)i(although)e(the)523
2652 y(de\002nition)f(does)h(not)g(require)f(this.)p
1579 2586 V 1579 2652 4 67 v 1642 2652 V 1579 2655 67
4 v 648 2808 a(The)g(term)h(\223partially)g(balanced)e
Fp(\(0)p Fo(;)c Fp(1\))20 b Fz(design\224)g(is)h(apparently)d(ne)n(w)i
(in)g(this)h(paper)-5 b(.)19 b(Closely)523 2907 y(related)e
Fm(partially)h(balanced)e(designs)i Fz(are)f(v)o(ery)g(important)g(in)h
(combinatorial-design)c(construc-)523 3007 y(tion.)k(Ho)n(we)n(v)o(er)m
(,)e(the)i(constraints)f(for)h(PB01Ds,)g(de\002ned)f(here,)h(are)g
(apparently)e(too)i(loose)g(to)g(say)523 3107 y(an)o(ything)g(that)i
(is)i(mathematically)c(interesting)h(about)h(them.)523
3262 y Fn(De\002nition)g(2.3.)40 b Fz(A)18 b Fp(\(0)p
Fo(;)c Fp(1\))j Fm(dif)o(fer)m(ence)g(set)i Fo(D)h Fz(for)d
Fo(Z)2058 3274 y Fl(v)2115 3262 y Fz(\(the)f(set)i(of)f(inte)o(gers)g
(modulo)e Fo(v)s Fz(\))j(is)g(a)g(set)g(of)523 3362 y(inte)o(gers)f(in)
g Fo(Z)942 3374 y Fl(v)999 3362 y Fz(such)g(that)g(each)g(element)g(of)
g Fo(Z)1906 3374 y Fl(v)1963 3362 y Fz(occurs)g(at)h(most)f(once)g(as)h
(a)f(dif)n(ference)f(\(modulo)523 3461 y Fo(v)s Fz(\))24
b(between)f(an)h(ordered)e(pair)i(of)g(distinct)g(inte)o(gers)f(in)h
Fo(D)r Fz(.)g(\(Note)f(that,)h(for)f(distinct)h Fo(a;)14
b(b)30 b Fk(2)g Fo(D)r Fz(,)523 3561 y Fo(b)19 b Fk(\000)f
Fo(a)j Fz(and)g Fo(a)e Fk(\000)f Fo(b)j Fz(are)g(distinct)g(dif)n
(ferences.\))d(In)j(this)g(conte)o(xt,)f(let)h Fo(k)27
b Fp(=)d Fk(j)p Fo(D)r Fk(j)p Fz(,)d(the)g(cardinality)f(of)523
3661 y Fo(D)r Fz(.)h(Since)f(there)g(are)g Fo(k)c Fp(\()p
Fo(k)22 b Fk(\000)c Fp(1\))i Fz(ordered)f(pairs,)h(we)g(ha)n(v)o(e)g
Fo(k)d Fp(\()p Fo(k)k Fk(\000)d Fp(1\))23 b Fk(\024)g
Fo(v)e Fk(\000)d Fp(1)p Fz(.)p 2904 3594 V 2904 3661
4 67 v 2967 3661 V 2904 3664 67 4 v 648 3816 a(The)24
b(term)g(\223)p Fp(\(0)p Fo(;)14 b Fp(1\))25 b Fz(dif)n(ference)e
(set\224)i(is)h(apparently)d(ne)n(w)h(in)h(this)g(paper)-5
b(.)24 b(As)i(with)f(balanced)523 3916 y Fp(\(0)p Fo(;)14
b Fp(1\))23 b Fz(designs,)g(the)g(limiting)g(case)g(of)g(a)h
Fp(\(0)p Fo(;)14 b Fp(1\))23 b Fz(dif)n(ference)e(set)j(is)g(a)f(more)g
(f)o(amiliar)f(concept)g(in)523 4016 y(combinatorial)c(design.)523
4171 y Fn(De\002nition)i(2.4.)40 b Fz(The)21 b(limiting)g(case)h(of)f
(a)g Fp(\(0)p Fo(;)14 b Fp(1\))21 b Fz(dif)n(ference)f(set)i(in)f
(which)g(each)f(positi)n(v)o(e)h(inte-)523 4271 y(ger)k(in)g
Fo(Z)802 4283 y Fl(v)866 4271 y Fz(occurs)g(in)g Fm(e)n(xactly)g
Fz(one)f(dif)n(ference)f(is)j(called)f(a)h Fm(cyclic)f
Fp(\()p Fo(v)s(;)14 b(k)s(;)g Fp(1\))25 b Fm(dif)o(fer)m(ence)f(set)p
Fz(.)i(In)523 4370 y(general,)19 b(a)i(c)o(yclic)e Fp(\()p
Fo(v)s(;)14 b(k)s(;)g(\025)p Fp(\))22 b Fz(dif)n(ference)c(set)j
(requires)e(that)i(each)f(positi)n(v)o(e)f(inte)o(ger)g(in)h
Fo(Z)3128 4382 y Fl(v)3188 4370 y Fz(occurs)523 4470
y(as)h(e)o(xactly)e Fo(\025)i Fz(dif)n(ferences.)p 1350
4404 V 1350 4470 4 67 v 1413 4470 V 1350 4473 67 4 v
648 4625 a(F)o(or)d(c)o(yclic)g Fp(\()p Fo(v)s(;)c(k)s(;)g
Fp(1\))20 b Fz(dif)n(ference)c(sets,)k(we)f(ha)n(v)o(e)f
Fo(k)f Fp(\()p Fo(k)f Fk(\000)d Fp(1\))23 b(=)f Fo(v)17
b Fk(\000)c Fp(1)p Fz(,)18 b(not)g(just)i(\223)p Fk(\024)p
Fz(\224.)e(Letting)523 4725 y Fo(k)40 b Fp(=)c Fo(q)27
b Fp(+)d(1)p Fz(,)j(we)h(see)g(that)g Fo(v)40 b Fp(=)d
Fo(q)1584 4695 y Fy(2)1645 4725 y Fp(+)24 b Fo(q)j Fp(+)c(1)p
Fz(,)28 b(which)f(is)h(the)g(relationship)e(present)h(for)g(\002nite)
523 4825 y(projecti)n(v)o(e)16 b(planes.)h(In)h(f)o(act,)g(dif)n
(ference)d(sets)k(with)f Fo(k)26 b Fp(=)d Fo(q)13 b Fp(+)d(1)17
b Fz(are)g(v)o(ery)g(useful)g(for)g(constructing)523
4924 y(\002nite)j(projecti)n(v)o(e)f(planes)h(of)g(order)f
Fo(q)s Fz(.)p eop
%%Page: 4 4
4 3 bop 523 1413 1047 4 v 523 1363 V 523 1313 V 523 1264
V 523 1214 V 523 1164 V 523 1114 V 523 1064 V 523 1015
V 523 965 V 523 915 V 523 865 V 523 815 V 523 765 V 523
716 V 523 666 V 523 616 V 523 566 V 523 516 V 523 467
V 523 417 V 523 367 V 521 1411 4 1047 v 571 1411 V 621
1411 V 671 1411 V 721 1411 V 770 1411 V 820 1411 V 870
1411 V 920 1411 V 970 1411 V 1020 1411 V 1069 1411 V
1119 1411 V 1169 1411 V 1219 1411 V 1269 1411 V 1318
1411 V 1368 1411 V 1418 1411 V 1468 1411 V 1518 1411
V 1567 1411 V 538 405 a Fj(X)70 b(X)219 b(X)19 b(X)120
b(X)563 488 y Fi(@)646 571 y(@)729 654 y(@)812 737 y(@)895
820 y(@)978 903 y(@)1061 986 y(@)1144 1069 y(@)1227 1152
y(@)1310 1235 y(@)1393 1318 y(@)1461 1386 y(@)-83 b(R)663
488 y(@)746 571 y(@)829 654 y(@)g(@)g(R)912 488 y(@)995
571 y(@)1078 654 y(@)g(@)g(R)961 488 y(@)1044 571 y(@)1127
654 y(@)g(@)g(R)1111 488 y(@)1194 571 y(@)1277 654 y(@)g(@)g(R)p
1654 1413 1744 4 v 1654 583 V 1653 1411 4 831 v 3396
1411 V 1654 1413 1686 4 v 1654 1330 V 1654 1247 V 1654
1164 V 1654 1081 V 1654 998 V 1654 915 V 1654 832 V 1654
749 V 1654 666 V 1654 583 V 1653 1353 4 773 v 1736 1353
V 1819 1353 V 1902 1353 V 1985 1353 V 2068 1353 V 2151
1353 V 2234 1353 V 2317 1353 V 2400 1353 V 2483 1353
V 2566 1353 V 2649 1353 V 2732 1353 V 2815 1353 V 2898
1353 V 2981 1353 V 3064 1353 V 3147 1353 V 3230 1353
V 3313 1353 V 3396 1353 V 1679 648 a Ft(1)129 b(5)362
b(15)9 b(17)175 b(23)1762 731 y(2)129 b(6)362 b(16)9
b(18)175 b(24)1845 814 y(3)129 b(7)362 b(17)9 b(19)175
b(25)1920 930 y Fi(@)2003 1013 y(@)2086 1096 y(@)2169
1179 y(@)2252 1262 y(@)-83 b(R)2086 930 y(@)2169 1013
y(@)2252 1096 y(@)2335 1179 y(@)2418 1262 y(@)g(R)2501
930 y(@)2584 1013 y(@)2667 1096 y(@)2750 1179 y(@)2833
1262 y(@)g(R)2584 930 y(@)2667 1013 y(@)2750 1096 y(@)2833
1179 y(@)2916 1262 y(@)g(R)2833 930 y(@)2916 1013 y(@)2999
1096 y(@)3082 1179 y(@)3165 1262 y(@)g(R)2484 1395 y
Fh(\001)17 b(\001)g(\001)3364 1013 y Fg(.)3364 1046 y(.)3364
1079 y(.)523 1586 y Fu(Fig)o(.)12 b(1.)k Ft(\(Left\))f(Using)h(a)g(c)o
(yclic)h(dif)n(ference)g(set)e(to)h(generate)h(a)g(\002nite)e(projecti)
n(v)o(e)i(plane.)f(\(Right\))g(Generating)523 1677 y(a)j(3D)g
Fs(\()p Fr(v)s(;)13 b Fs(5)p Fr(;)g Fs(\(0)p Fr(;)h Fs(1\)\))19
b Ft(design,)g(for)g Fr(v)24 b Fs(=)d(21)f Ft(or)f Fr(v)24
b Fv(\025)d Fs(23)p Ft(,)e(as)g(described)h(in)f(Section)g(4.)523
1971 y Fm(Example)g(2.1.)40 b Fz(It)c(will)g(be)f(sho)n(wn)g(later)m(,)
g(in)g(Lemma)g(2.5,)f(that)h Fk(f)p Fp(0)p Fo(;)14 b
Fp(2)p Fo(;)g Fp(7)p Fo(;)g Fp(8)p Fo(;)g Fp(11)p Fk(g)32
b Fz(is)k(a)g(c)o(yclic)523 2071 y Fp(\(21)p Fo(;)14
b Fp(5)p Fo(;)g Fp(1\))j Fz(dif)n(ference)g(set.)i(In)f(a)g
Fp(21)12 b Fk(\002)g Fp(21)k Fz(matrix)h(\(with)i(ro)n(ws)f(and)g
(columns)f(inde)o(x)o(ed)f(be)o(ginning)523 2170 y(at)28
b(0\))e(an)h(incidence)f(matrix)g(for)h(a)g(\002nite)h(projecti)n(v)o
(e)d(plane)h(of)h(order)f(4)h(can)g(be)g(generated)e(by)523
2270 y(placing)c(X')-5 b(s)22 b(\(for)f(\003ags\))g(in)h(ro)n(w)f(0,)g
(columns)g Fk(f)p Fp(0)p Fo(;)14 b Fp(2)p Fo(;)g Fp(7)p
Fo(;)g Fp(8)p Fo(;)g Fp(11)p Fk(g)p Fz(,)j(then)k(continuing)f(in)h(a)h
(circulant)523 2369 y(f)o(ashion)h(through)f(succeeding)h(ro)n(ws)h(by)
g(shifting)f(the)i(pattern)e Fp(45)2504 2339 y Ff(\016)2566
2369 y Fz(do)n(wn)g(and)h(to)g(the)g(right,)g(as)523
2469 y(suggested)19 b(in)i(Figure)e(1.)h(The)g(pattern)f(wraps)h
(around)f(just)h(lik)o(e)h(inte)o(gers)e(modulo)g(21.)648
2570 y(It)h(is)i(straightforw)o(ard)c(to)j(v)o(erify)e(that)i(e)n(v)o
(ery)e(ro)n(w)h(has)h(\002)n(v)o(e)f(X')-5 b(s)22 b(and)e(e)n(v)o(ery)f
(column)g(has)i(\002)n(v)o(e)523 2670 y(X')-5 b(s)27
b(also.)g(A)g(moment')-5 b(s)26 b(re\003ection)f(sho)n(ws)i(that,)f(if)
h(a)g(quadrangle)d(occurs)i(in)g(this)h(generation)523
2769 y(scheme,)f(then)h(the)g(zero-th)f(ro)n(w)h(must)g(not)f(be)h(a)h
(c)o(yclic)e Fp(\(21)p Fo(;)14 b Fp(5)p Fo(;)g Fp(1\))27
b Fz(dif)n(ference)e(set,)i(or)g(e)n(v)o(en)f(a)523 2869
y Fp(\(0)p Fo(;)14 b Fp(1\))20 b Fz(dif)n(ference)e(set)j(for)f
Fo(Z)1371 2881 y Fy(21)1441 2869 y Fz(.)p 1483 2803 67
4 v 1483 2869 4 67 v 1546 2869 V 1483 2872 67 4 v 648
3050 a(The)k(ne)o(xt)f(question)g(of)h(interest)h(is)g(ho)n(w)f(to)g
(\002nd)g Fp(\(0)p Fo(;)14 b Fp(1\))25 b Fz(dif)n(ference)d(sets)j(for)
f(v)n(arious)f(com-)523 3149 y(binations)k(of)g Fp(\()p
Fo(v)s(;)14 b(k)s(;)g Fp(1\))p Fz(,)28 b(for)f(if)h(we)h(\002nd)e(such)
h(a)g Fp(\(0)p Fo(;)14 b Fp(1\))28 b Fz(dif)n(ference)d(set,)k(then)e
(generation)f(of)h(a)523 3249 y Fm(symmetric)d Fp(\(0)p
Fo(;)14 b Fp(1\))23 b Fz(design)g(for)g Fo(v)k Fz(objects)c(and)f
(block)h(size)h Fo(k)i Fz(becomes)d(routine.)e(Anderson)h(de-)523
3349 y(scribes)f(an)g(in)m(v)n(olv)o(ed)f(and)g(e)o(xpensi)n(v)o(e)f
(general)i(procedure,)d(b)n(ut)j(fortunately)e(gi)n(v)o(es)i(answers)g
(for)523 3448 y Fp(3)j Fk(\024)g Fo(k)j Fk(\024)e Fp(6)p
Fz(,)20 b(attrib)n(uted)g(to)i(Re)n(v)-5 b(.)20 b(T)-6
b(.)21 b(Kirkman,)e(1857)h([And90)n(,)h(Example)f(2.1.3,)f(p.)i(50].)f
(V)-9 b(alues)523 3548 y(for)24 b(lar)o(ger)f Fo(k)28
b Fz(are)d(tab)n(ulated,)e(as)j(well)f([CD96)o(].)f(In)h(each)f(case,)h
Fo(k)34 b Fp(=)d Fo(q)24 b Fp(+)e(1)p Fz(,)i Fo(v)35
b Fp(=)30 b Fo(q)3049 3518 y Fy(2)3108 3548 y Fp(+)22
b Fo(q)i Fp(+)e(1)p Fz(,)523 3648 y(and)e(the)h(dif)n(ference)d(set)k
(supports)e(the)g(generation)f(of)h(a)h(projecti)n(v)o(e)e(plane)h(of)h
(order)e Fo(q)s Fz(.)i(W)-7 b(e)22 b(ha)n(v)o(e)523 3747
y(found)g(that)i(these)g(c)o(yclic)f(dif)n(ference)f(sets)j(serv)o(e)e
(as)h Fp(\(0)p Fo(;)14 b Fp(1\))24 b Fz(dif)n(ference)e(sets)j(for)e
(man)o(y)g Fo(v)3194 3717 y Ff(0)3247 3747 y Fo(>)29
b(v)s Fz(.)523 3847 y(The)20 b(follo)n(wing)e(lemma)i(e)o(xplains)f(ho)
n(w)-5 b(.)523 4029 y Fn(Lemma)21 b(2.5.)40 b Fz(The)20
b(sets)h Fo(D)1346 4041 y Fy(3)1404 4029 y Fz(through)d
Fo(D)1752 4041 y Fy(6)1810 4029 y Fz(ha)n(v)o(e)h(properties)g(as)i
(follo)n(ws:)560 4201 y(1.)41 b Fo(D)733 4213 y Fy(3)799
4201 y Fp(=)27 b Fk(f)p Fp(0)p Fo(;)14 b Fp(1)p Fo(;)g
Fp(3)p Fk(g)21 b Fz(is)j(a)g Fp(\(0)p Fo(;)14 b Fp(1\))23
b Fz(dif)n(ference)e(set)j(for)e Fp(\()p Fo(v)s(;)14
b Fp(3)p Fo(;)g Fp(1\))p Fz(,)23 b(for)g(all)g Fo(v)32
b Fk(\025)c Fp(8)p Fz(,)23 b(and)f(is)i(a)g(c)o(yclic)664
4301 y(dif)n(ference)18 b(set)j(for)f Fp(\(7)p Fo(;)14
b Fp(3)p Fo(;)g Fp(1\))p Fz(.)560 4402 y(2.)41 b Fo(D)733
4414 y Fy(4)808 4402 y Fp(=)c Fk(f)p Fp(0)p Fo(;)14 b
Fp(4)p Fo(;)g Fp(5)p Fo(;)g Fp(7)p Fk(g)25 b Fz(is)k(a)f
Fp(\(0)p Fo(;)14 b Fp(1\))29 b Fz(dif)n(ference)c(set)k(for)f
Fp(\()p Fo(v)s(;)14 b Fp(4)p Fo(;)g Fp(1\))p Fz(,)28
b(for)f(all)i Fo(v)40 b Fk(\025)d Fp(15)p Fz(,)28 b(and)f(is)i(a)664
4502 y(c)o(yclic)20 b(dif)n(ference)e(set)j(for)f Fp(\(13)p
Fo(;)14 b Fp(4)p Fo(;)g Fp(1\))p Fz(.)560 4603 y(3.)41
b Fo(D)733 4615 y Fy(5)797 4603 y Fp(=)26 b Fk(f)p Fp(0)p
Fo(;)14 b Fp(2)p Fo(;)g Fp(7)p Fo(;)g Fp(8)p Fo(;)g Fp(11)p
Fk(g)k Fz(is)23 b(a)g Fp(\(0)p Fo(;)14 b Fp(1\))22 b
Fz(dif)n(ference)e(set)j(for)f Fp(\()p Fo(v)s(;)14 b
Fp(5)p Fo(;)g Fp(1\))p Fz(,)22 b(for)f(all)i Fo(v)30
b Fk(\025)c Fp(23)p Fz(,)21 b(and)h(is)h(a)664 4703 y(c)o(yclic)d(dif)n
(ference)e(set)j(for)f Fp(\(21)p Fo(;)14 b Fp(5)p Fo(;)g
Fp(1\))p Fz(.)560 4804 y(4.)41 b Fo(D)733 4816 y Fy(6)795
4804 y Fp(=)25 b Fk(f)p Fp(0)p Fo(;)14 b Fp(4)p Fo(;)g
Fp(11)p Fo(;)g Fp(13)p Fo(;)g Fp(14)p Fo(;)g Fp(19)p
Fk(g)h Fz(is)22 b(a)g Fp(\(0)p Fo(;)14 b Fp(1\))21 b
Fz(dif)n(ference)e(set)j(for)f Fp(\()p Fo(v)s(;)14 b
Fp(6)p Fo(;)g Fp(1\))p Fz(,)21 b(for)g Fp(35)j Fk(\024)g
Fo(v)29 b Fk(\024)24 b Fp(37)p Fz(,)664 4904 y(and)c(for)f(all)i
Fo(v)26 b Fk(\025)d Fp(39)p Fz(,)d(and)f(is)i(a)g(c)o(yclic)f(dif)n
(ference)e(set)j(for)e Fp(\(31)p Fo(;)14 b Fp(6)p Fo(;)g
Fp(1\))p Fz(.)p eop
%%Page: 5 5
5 4 bop 648 448 a Fz(If)23 b Fo(D)j Fz(is)f(a)f(c)o(yclic)f
Fp(\()p Fo(v)s(;)14 b(k)s(;)g Fp(1\))24 b Fz(dif)n(ference)e(set,)i(an)
o(y)f(translation,)f(or)i(shift,)f(of)h(the)f(elements)h(of)523
548 y Fo(D)r Fz(,)j(modulo)e Fo(v)s Fz(,)j(continues)e(to)h(be)f(a)i(c)
o(yclic)e(dif)n(ference)f(set.)j(F)o(or)e(e)o(xample,)f
Fp(\(0)p Fo(;)14 b Fp(1)p Fo(;)g Fp(4)p Fo(;)g Fp(14)p
Fo(;)g Fp(16\))25 b Fz(is)523 648 y(a)g(translate)g(of)g
Fp(\(0)p Fo(;)14 b Fp(2)p Fo(;)g Fp(7)p Fo(;)g Fp(8)p
Fo(;)g Fp(11\))23 b Fz(in)i Fo(Z)1621 660 y Fy(21)1691
648 y Fz(,)g(and)g(it)g(is)h(also)g(a)f(c)o(yclic)g(dif)n(ference)e
(set)i(for)g Fp(\(21)p Fo(;)14 b Fp(5)p Fo(;)g Fp(1\))p
Fz(.)523 747 y(Although)21 b Fp(\(0)p Fo(;)14 b Fp(2)p
Fo(;)g Fp(7)p Fo(;)g Fp(8)p Fo(;)g Fp(11\))20 b Fz(is)j(a)g
Fp(\(0)p Fo(;)14 b Fp(1\))22 b Fz(dif)n(ference)f(set)i(for)e
Fp(\(23)p Fo(;)14 b Fp(5)p Fo(;)g Fp(1\))p Fz(,)21 b(the)i(same)f(is)i
Fm(not)f Fz(true)f(for)523 847 y Fp(\(0)p Fo(;)14 b Fp(1)p
Fo(;)g Fp(4)p Fo(;)g Fp(14)p Fo(;)g Fp(16\))k Fz(\(dif)n(ferences)g(of)
i(10)f(occur)g(multiply\).)523 1124 y Fq(3)99 b(Generating)26
b(Unsatis\002able)f(F)n(ormulas)523 1334 y Fz(The)20
b(primary)e(goal)i(of)g(this)g(research)g(is)h(to)f(generate)f(small,)h
(v)o(ery)f(hard,)g(propositional)f(satis\002a-)523 1434
y(bility)e(benchmarks.)d(In)j(se)n(v)o(eral)f(pre)n(vious)f(SA)-9
b(T)16 b(competitions)f(benchmarks)e(ha)n(v)o(e)j(been)f(di)n(vided)523
1533 y(into)27 b(three)g(cate)o(gories,)f Fm(Industrial)p
Fz(,)g Fm(Cr)o(afted)p Fz(,)h(and)g Fm(Random)p Fz(.)e(The)i
(benchmarks)e(described)h(in)523 1633 y(this)21 b(paper)e(f)o(all)h
(into)g(the)h(crafted)e(cate)o(gory)-5 b(.)648 1735 y(Although)19
b(crafted)i(benchmark)e(generators)g(often)i(emplo)o(y)f(some)h(de)o
(gree)f(of)i(randomness,)523 1834 y(their)f(distinguishing)e(feature)i
(is)h(some)f(underlying)e(common)g(structure,)h(and)h(the)g(randomness)
523 1934 y(produces)h(v)n(ariations)g(of)h(that)h(structure.)e(T)-7
b(o)24 b(ha)n(v)o(e)e(benchmarks)g(that)h(are)g(solv)n(able)g(within)g
(our)523 2034 y(computational)16 b(resources,)i(we)h(generated)e
(starting)i(at)g(85)f(v)n(ariables,)g(with)h(40)g(samples)g(at)g(each)
523 2133 y(size,)i(and)e(gathered)f(statistics)k(on)e(se)n(v)o(eral)f
(solv)o(ers.)h(The)f(e)o(xperiments)g(are)h(described)f(in)h(a)g(later)
523 2233 y(section.)g(Here)g(we)g(e)o(xplain)f(the)i(methods)e(of)h
(generation.)648 2335 y(First,)d(we)h(need)f(to)g(describe)g(ho)n(w)f
(a)i Fp(\(0)p Fo(;)c Fp(1\))j Fz(design)g(or)g(a)h(PB01D)f(is)h(mapped)
e(to)h(a)h(constraint-)523 2434 y(satisf)o(action)i(problem.)f(Our)h
(mapping)e(is)k(quite)e(dif)n(ferent)e(from)i(those)g(found)e(in)j
(studies)g(of)f Fm(lin-)523 2534 y(ear)g(CNF)j Fz([K)o(ul07)n(,PS09)o
(].)d(In)f([PS09)o(])h(a)g(linear)f(formula)f(is)j(deri)n(v)o(ed)d
(from)g(a)i(PB01D)g(as)h(de\002ned)523 2634 y(in)k(De\002nition)f(2.2)h
(by)f(mapping)f(objects)i(to)g(clauses)g(and)g(blocks)f(to)h
(propositional)e(v)n(ariables.)523 2733 y(Thus)f(there)h(are)f
Fo(v)27 b Fz(clauses)c(on)g Fo(b)g Fz(v)n(ariables.)e(Our)i(mappings)e
(all)i(ha)n(v)o(e)f(one)h(propositional)d(v)n(ari-)523
2833 y(able)k(per)g(\003ag,)g(gi)n(ving)e Fo(v)17 b(r)33
b Fp(=)d Fo(b)14 b(k)27 b Fz(v)n(ariables)c(for)h Fp(\(0)p
Fo(;)14 b Fp(1\))24 b Fz(designs.)f(Our)h(mappings)e(are)i(inspired)523
2932 y(by)-5 b(,)19 b(and)h(generalize,)e(pre)n(vious)h(w)o(ork)h(of)g
(Spence)f([Spe10)n(].)648 3034 y(Recall)i(that)h(each)e
Fp(\(0)p Fo(;)14 b Fp(1\))22 b Fz(design)e(is)i(represented)d(by)i(an)g
(incidence)f(matrix)g Fo(M)9 b Fz(.)21 b(Let)h Fo(x)3222
3046 y Fl(r)n(;c)3327 3034 y Fz(be)523 3134 y(a)h(set)h(of)e
(propositional)e(v)n(ariables)i(corresponding)d(to)k(the)g(\003ags)g
(of)f Fo(M)9 b Fz(.)23 b(A)g(resource)e(allocation)523
3234 y(problem)j(can)i(be)f(associated)h(with)g(an)g(incidence)e
(matrix)h(in)h(a)g(natural)f(w)o(ay)-5 b(.)25 b(Let)h(each)g(ro)n(w)f
Fo(r)523 3333 y Fz(require)19 b Fm(need)938 3345 y Fl(r)996
3333 y Fz(resources,)g(and)h(let)g(each)g(column)f Fo(c)i
Fz(be)f(able)h(to)f(supply)f Fm(avail)2847 3345 y Fl(c)2902
3333 y Fz(resources,)g(both)523 3433 y(in)h(inte)o(ger)e(units.)h(The)g
(\003ag)h Fo(x)1400 3445 y Fl(r)n(;c)1503 3433 y Fz(means)f(that)g
(column)f Fo(c)i Fz(can)f(supply)g(a)g(resource)g(that)g(ro)n(w)g
Fo(r)k Fz(can)523 3532 y(use.)d(W)m(ith)h(slight)f(ab)n(use)g(of)g
(notation,)f(we)h(encode)f(clauses)i(that)f(are)g(equi)n(v)n(alent)f
(to)1660 3655 y Fe(X)1667 3829 y Fl(c)p Ff(2)p Fl(r)1794
3733 y Fo(x)1841 3745 y Fl(r)n(;c)1947 3733 y Fk(\025)k
Fm(need)2194 3745 y Fl(r)2231 3733 y Fo(;)1054 b Fz(\(1\))1660
3883 y Fe(X)1667 4057 y Fl(r)r Ff(2)p Fl(c)1794 3962
y Fo(x)1841 3974 y Fl(r)n(;c)1947 3962 y Fk(\024)23 b
Fm(avail)2201 3974 y Fl(c)2235 3962 y Fo(:)1050 b Fz(\(2\))523
4223 y(This)19 b(is)g(the)g(arithmetic)f(sum,)g(with)h
Fo(x)1633 4235 y Fl(r)n(;c)1735 4223 y Fz(interpreted)e(as)i(0)g(or)f
(1.)h(Constraints)f(of)h(this)g(type)f(are)g(in)523 4322
y(the)i(language)f(of)h(inte)o(ger)f(linear)g(programming.)648
4424 y(F)o(or)i(e)o(xample,)e(a)j(compan)o(y)d(needs)i(to)h(manage)e
(numerous)g(ongoing)f(small)j(projects)e(with)i(a)523
4524 y(pool)h(of)h(w)o(ork)o(ers,)f(and)g Fo(x)1291 4536
y Fl(r)n(;c)1399 4524 y Fz(is)i(de\002ned)e(when)g(w)o(ork)o(er)g
Fo(c)h Fz(is)h(quali\002ed)e(for)g(project)h Fo(r)r Fz(.)h(W)-7
b(ork)o(ers)523 4623 y(can)27 b(time-share)e(on)i(a)g(limited)g(number)
d(of)j(projects)f(according)f(to)i Fm(avail)2761 4635
y Fl(c)2795 4623 y Fz(,)g(whereas)f(projects)523 4723
y(need)20 b(staf)n(\002ng)f(at)i(le)n(v)o(els)f(gi)n(v)o(en)f(by)h
Fm(need)1725 4735 y Fl(r)1762 4723 y Fz(.)g(Can)h(all)f(projects)g(be)g
(staf)n(fed)g(adequately?)648 4825 y(F)o(or)e(CNF)-7
b(,)20 b(we)g(encode)d(the)i(statement)g(\223each)g(subset)g
Fp(\()p Fo(r)n(;)14 b(c)p Fp(\))20 b Fz(of)e(cardinality)g
Fk(j)p Fo(r)r Fk(j)d(\000)e Fm(need)3234 4837 y Fl(r)3285
4825 y Fp(+)g(1)523 4924 y Fz(contains)k(a)h(true)f Fo(x)1067
4936 y Fl(r)n(;c)1150 4924 y Fz(.)-6 b(\224)19 b(Here,)e
Fk(j)p Fo(r)r Fk(j)i Fz(denotes)e(the)h(cardinality)e(of)h(the)h
Fm(set)i Fz(of)d(v)n(ariables)g Fo(x)3059 4936 y Fl(r)n(;c)3161
4924 y Fz(de\002ned)p eop
%%Page: 6 6
6 5 bop 523 448 a Fz(in)26 b(ro)n(w)f Fo(r)r Fz(.)i(Such)e(a)h(set)h
(of)e(clauses)h(is)h(generated)d(for)h(each)h Fo(r)r
Fz(,)g Fp(1)33 b Fk(\024)g Fo(r)j Fk(\024)d Fo(v)s Fz(.)26
b(Analogously)-5 b(,)23 b(for)523 548 y(Eq.)d(2)h(for)f(each)h
Fo(c)p Fz(,)g Fp(1)j Fk(\024)f Fo(c)i Fk(\024)e Fo(b)p
Fz(,)e(we)g(generate)f(ne)o(gati)n(v)o(e)f(clauses)i(to)g(encode)e
(\223each)h(subset)h Fp(\()p Fo(r)n(;)14 b(c)p Fp(\))523
648 y Fz(of)20 b(cardinality)f Fk(j)p Fo(c)p Fk(j)f(\000)g
Fm(avail)1338 660 y Fl(c)1391 648 y Fp(+)g(1)i Fz(contains)f(a)i(f)o
(alse)g Fo(x)2115 660 y Fl(r)n(;c)2198 648 y Fz(.)-6
b(\224)648 755 y(It)25 b(is)h(e)n(vident)e(to)h(a)h(human)d(that,)i(if)
1725 692 y Fe(P)1812 779 y Fl(r)1863 755 y Fm(need)2022
767 y Fl(r)2091 755 y Fo(>)2187 692 y Fe(P)2275 779 y
Fl(c)2323 755 y Fm(avail)2489 767 y Fl(c)2523 755 y Fz(,)g(then)g(the)g
(system)g(is)h(unsat-)523 854 y(is\002able.)g(F)o(or)g(a)g
Fp(\(21)p Fo(;)14 b Fp(5)p Fo(;)g Fp(1\))25 b Fz(design)g(it)h(is)h
(easy)f(to)g(choose)f(2)h(or)g(3)g(as)g(v)n(alues)g(for)f
Fm(need)q Fz(,)h(and)f(the)523 954 y(same)20 b(for)f
Fm(avail)o Fz(,)g(so)h(that)1276 892 y Fe(P)1364 979
y Fl(r)1414 954 y Fm(need)1573 966 y Fl(r)1633 954 y
Fp(=)j(53)c Fz(and)1964 892 y Fe(P)2051 979 y Fl(c)2099
954 y Fm(avail)2265 966 y Fl(c)2322 954 y Fp(=)k(52)p
Fz(.)18 b(The)h(formula)f(generated)g(for)523 1053 y(the)25
b(resulting)f(constraint-satisf)o(action)f(problem)h(has)h(105)f(v)n
(ariables,)g(320)g(clauses,)h(and)g(1060)523 1153 y(literals.)c(W)-7
b(e)21 b(issue)g(a)f(challenge)f(for)h(an)o(y)f(solv)o(er)h(to)g(solv)o
(e)g(it)h(in)f(less)h(than)f(one)g(day)-5 b(.)648 1260
y(Although)18 b(the)h(formula)f(just)j(described)d(appears)h(to)h(be)g
(v)o(ery)e(challenging)g(for)h(its)i(size,)f(it)h(is)523
1360 y(one)g(of)h(a)g(kind,)f(e)o(xcept)g(for)g(permuting)f(v)n
(ariable)g(numbers)h(and)g(\003ipping)g(some)g(polarities.)g(W)-7
b(e)523 1459 y(need)20 b(methods)f(to)h(generate)f(formulas)g(of)h(v)n
(arying)e(sizes)j(to)g(get)f(useful)f(benchmarks.)648
1566 y(The)f(\002rst)i(method)e(of)g(generation)f(consists)j(of)e
(deleting)g(\003ags)i(from)e(the)h Fp(21)13 b Fk(\002)g
Fp(21)19 b Fz(incidence)523 1666 y(matrix)27 b(for)g(the)h
Fp(\(21)p Fo(;)14 b Fp(5)p Fo(;)g Fp(1\))26 b Fz(BIBD)j(just)f
(mentioned,)e(then)h(encoding)f(similar)h(constraints)g(that)523
1766 y(ensure)e(that)917 1703 y Fe(P)1005 1791 y Fl(r)1055
1766 y Fm(need)1214 1778 y Fl(r)1285 1766 y Fo(>)33 b(n=)p
Fp(2)25 b Fz(and)1689 1703 y Fe(P)1777 1791 y Fl(c)1824
1766 y Fm(avail)1990 1778 y Fl(c)2058 1766 y Fk(\024)33
b Fo(n=)p Fp(2)p Fz(,)25 b(where)g Fo(n)i Fz(is)g(the)f(number)e(of)h
(\003ags.)523 1865 y(Flags)18 b(are)f(deleted)g(in)h(a)g(manner)e(such)
h(that)h(e)n(v)o(ery)e(object)h(has)h(4)f(or)h(5)f(\003ags)h(in)g(its)g
(ro)n(w)-5 b(,)17 b(and)g(e)n(v)o(ery)523 1965 y(block)h(has)h(4)g(or)g
(5)g(\003ags)h(in)f(its)h(column.)d(Then)h Fm(need)j
Fz(and)d Fm(avail)h Fz(v)n(alues)g(are)g(assigned)f(so)h(that)g(the)523
2065 y(sums)g(come)e(out)h(to)h Fk(d)p Fp(\()p Fo(n)11
b Fp(+)g(1\))p Fo(=)p Fp(2)p Fk(e)18 b Fz(and)f Fk(b)p
Fo(n=)p Fp(2)p Fk(c)p Fz(,)h(respecti)n(v)o(ely)-5 b(,)16
b(ensuring)g(unsatis\002ability)-5 b(.)18 b(Labels)523
2164 y(\223)p Fd(sgen2del)p Fz(\224)j(in)g(the)f(e)o(xperiments)e
(refer)i(to)g(this)h(method.)648 2271 y(The)g(second)g(method)f(of)i
(generation)e(is)i(considerably)e(simpler)m(,)h(b)n(ut)g(less)i(\003e)o
(xible.)e(Spence)523 2371 y(reported)e(a)j(procedure)d(that)i(uses)g
(simulated)g(annealing)f(to)h(reduce)f(a)h(penalty)g(function,)e
(called)523 2470 y(the)g Fm(scor)m(e)p Fz(,)h(computed)d(on)i
(permutations)e([Spe10)o(].)i(As)h(it)g(happens,)e(a)i(permutation)d
(has)i(score)g(0)523 2570 y(if)24 b(and)f(only)g(if)h(it)g(corresponds)
e(to)h(a)i(PB01D.)e(\(If)g(the)h(last)g(v)n(ariable)f(is)i(ignored,)c
(it)k(w)o(ould)d(be)i(a)523 2670 y Fp(\()p Fo(v)s(;)14
b Fp(4)p Fo(;)g Fp(\(0)p Fo(;)g Fp(1\)\))21 b Fz(design.\))f(F)o(or)g
Fo(g)25 b Fz(groups)19 b(it)j(is)g(a)f(PB01D)g(with)g
Fo(v)28 b Fp(=)c Fo(g)g Fz(and)c Fo(R)26 b Fp(=)e Fo(K)30
b Fp(=)24 b Fk(f)p Fp(4)p Fo(;)14 b Fp(5)p Fk(g)p Fz(.)19
b(All)523 2769 y(objects)e(b)n(ut)g(one,)g(and)f(all)i(blocks)f(b)n(ut)
g(one,)f(ha)n(v)o(e)h(size)h(4.)f(The)g(remaining)e(object)i(and)f
(remaining)523 2869 y(block)j(ha)n(v)o(e)h(size)h(5.)648
2976 y(As)27 b(it)g(happens)e(the)h(original)g(study)g(be)o(gan)e(in)j
(a)g(range)e(where)h(achie)n(ving)f(score)h(0)g(w)o(ould)523
3076 y(be)c(a)g(rare)f(e)n(v)o(ent.)g(Also,)g(for)h(simplicity)f(and)g
(speed,)g(the)h(program)d(only)i(computed)f Fm(c)o(hang)o(es)g
Fz(in)523 3175 y(score,)g(not)g(actual)g(score.)f(Labels)h(\223)p
Fd(or)q(ig)p Fz(\224)h(in)g(the)f(e)o(xperiments)e(refer)i(to)g(this)h
(method.)648 3282 y(Using)32 b(\223back)f(of)h(the)g(en)m(v)o
(elope\224)d(methods)j(we)g(calculated)f(that)h(in)h(the)f(range)f
Fo(v)48 b Fp(=)d(21)523 3382 y(\()p Fo(v)s(;)14 b Fp(4)p
Fo(;)g Fp(\(0)p Fo(;)g Fp(1\)\))26 b Fz(designs)g(should)f(be)g
(plentiful)g(enough)f(that)i(random)e(searching)h(should)g(ha)n(v)o(e)g
(a)523 3481 y(good)17 b(chance)h(to)h(succeed.)e(Therefore,)f(we)j
(modi\002ed)f(the)g(program)f(to)i(compute)e(and)h(check)f(the)523
3581 y(actual)22 b(score,)f(and)h(stop)g(if)g(the)g(score)g(reached)f
(0.)h(This)g(method)f(has)h(so)g(f)o(ar)g(al)o(w)o(ays)h(succeeded)523
3681 y(within)d(about)f(100,000)f(tries,)i(for)g Fo(n)j
Fk(\025)f Fp(85)p Fz(,)e(and)g(group)e(size)j(4)f(\(e)o(xcept)f(5)h
(for)g(the)g(last)h(group\).)648 3788 y(Once)k(the)h(permutation)d
(with)j(score)g(0)g(is)g(found,)e(the)i Fm(need)h Fz(is)g(set)f(to)g(2)
g(for)f(all)h(objects)g(of)523 3887 y(size)d(4)g(and)f(is)h(set)h(to)f
(3)f(for)g(the)h(object)f(of)g(size)h(5.)g(The)f Fm(avail)g
Fz(is)i(set)f(to)g(2)g(for)e(all)j(blocks)e(of)g(size)523
3987 y(4)h(and)g(is)g(set)h(to)f(2)g(for)g(the)g(block)f(of)g(size)i
(5,)f(as)h(in)f(the)g(original)e(study)-5 b(.)22 b(Labels)h(\223)p
Fd(score)p Fz(\224)f(in)h(the)523 4087 y(e)o(xperiments)18
b(refer)i(to)g(this)h(method.)523 4389 y Fq(4)99 b(Generating)26
b(Satis\002able)f(F)n(ormulas)523 4625 y Fz(Since)17
b(there)f(is)h(no)f(such)g(thing)g(as)h(an)g(objecti)n(v)o(ely)e(hard)g
(satis\002able)i(formula,)e(generating)g(satis\002-)523
4725 y(able)j(benchmarks)d(that)j(are)f(predictably)f(dif)n(\002cult)h
(for)g(a)h(wide)f(range)g(of)g(solv)o(ers)g(is)i(challenging,)523
4825 y(if)h(not)g(impossible.)f(W)-7 b(e)21 b(in)m(v)o(estigated)d(a)i
(3D)g(analogy)f(of)h Fp(\(0)p Fo(;)14 b Fp(1\))20 b Fz(designs,)f(as)i
(well)f(as)h(modifying)523 4924 y(the)29 b(generator)f(reported)f(by)i
(Spence)g(to)g(compute)f(scores)h(and)g(stop)h(at)f(0.)g(The)g(e)o
(xtension)f(to)p eop
%%Page: 7 7
7 6 bop 1104 448 a Fc(or)q(ig)703 b(scores)627 b(sgen2del)490
1627 y
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 490 1627 a @beginspecial 50 @llx 50 @lly 338 @urx
338 @ury 2880 @rwi @setspecial
%%BeginDocument: unsatplots/sgen1-orig-085-093-A.eps
%!PS-Adobe-2.0
%%Title: sgen1-orig-085-093-three.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Tue Feb 09 19:41:29 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sgen1-orig-085-093-three.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 09 19:41:29 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
1865 0 R
-63 0 V
stroke
630 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
714 765 M
31 0 V
1897 0 R
-31 0 V
714 967 M
31 0 V
1897 0 R
-31 0 V
714 1110 M
31 0 V
1897 0 R
-31 0 V
714 1221 M
31 0 V
1897 0 R
-31 0 V
714 1312 M
31 0 V
1897 0 R
-31 0 V
714 1388 M
31 0 V
1897 0 R
-31 0 V
714 1455 M
31 0 V
1897 0 R
-31 0 V
714 1514 M
31 0 V
1897 0 R
-31 0 V
714 1566 M
63 0 V
1865 0 R
-63 0 V
stroke
630 1566 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
714 1911 M
31 0 V
1897 0 R
-31 0 V
714 2113 M
31 0 V
1897 0 R
-31 0 V
714 2256 M
31 0 V
1897 0 R
-31 0 V
714 2367 M
31 0 V
1897 0 R
-31 0 V
714 2458 M
31 0 V
1897 0 R
-31 0 V
714 2534 M
31 0 V
1897 0 R
-31 0 V
714 2601 M
31 0 V
1897 0 R
-31 0 V
714 2660 M
31 0 V
1897 0 R
-31 0 V
714 2712 M
63 0 V
1865 0 R
-63 0 V
stroke
630 2712 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
714 420 M
0 63 V
0 2229 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 84)]
] -46.7 MCshow
1.000 UL
LTb
1100 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1100 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 88)]
] -46.7 MCshow
1.000 UL
LTb
1485 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1485 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 92)]
] -46.7 MCshow
1.000 UL
LTb
1871 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1871 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 96)]
] -46.7 MCshow
1.000 UL
LTb
2256 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2256 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 104)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Execution time \(minutes\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
1678 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (minisat)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 889 M
386 355 V
386 331 V
810 872 M
0 34 V
779 872 M
62 0 V
-62 34 R
62 0 V
355 319 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
355 292 R
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
810 889 Pls
1196 1244 Pls
1582 1575 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (march_hi)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 1275 M
386 412 V
386 414 V
810 1274 M
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
355 408 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
355 409 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
810 1275 Crs
1196 1687 Crs
1582 2101 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (clasp)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 778 M
386 373 V
386 333 V
385 407 V
386 355 V
810 755 M
0 44 V
779 755 M
62 0 V
-62 44 R
62 0 V
355 337 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
355 294 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
354 360 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
355 312 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
810 778 Star
1196 1151 Star
1582 1484 Star
1967 1891 Star
2353 2246 Star
2274 553 Star
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 490 1627 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 490 1627 a 1386 1627 a
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 1386 1627
a @beginspecial 50 @llx 50 @lly 338 @urx 338 @ury 2880
@rwi @setspecial
%%BeginDocument: unsatplots/sgen1-scores-085-093-B.eps
%!PS-Adobe-2.0
%%Title: sgen1-scores-085-093-three.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Tue Feb 09 19:41:29 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sgen1-scores-085-093-three.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 09 19:41:29 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
1865 0 R
-63 0 V
stroke
630 420 M
1.000 UL
LTb
714 765 M
31 0 V
1897 0 R
-31 0 V
714 967 M
31 0 V
1897 0 R
-31 0 V
714 1110 M
31 0 V
1897 0 R
-31 0 V
714 1221 M
31 0 V
1897 0 R
-31 0 V
714 1312 M
31 0 V
1897 0 R
-31 0 V
714 1388 M
31 0 V
1897 0 R
-31 0 V
714 1455 M
31 0 V
1897 0 R
-31 0 V
714 1514 M
31 0 V
1897 0 R
-31 0 V
714 1566 M
63 0 V
1865 0 R
-63 0 V
stroke
630 1566 M
1.000 UL
LTb
714 1911 M
31 0 V
1897 0 R
-31 0 V
714 2113 M
31 0 V
1897 0 R
-31 0 V
714 2256 M
31 0 V
1897 0 R
-31 0 V
714 2367 M
31 0 V
1897 0 R
-31 0 V
714 2458 M
31 0 V
1897 0 R
-31 0 V
714 2534 M
31 0 V
1897 0 R
-31 0 V
714 2601 M
31 0 V
1897 0 R
-31 0 V
714 2660 M
31 0 V
1897 0 R
-31 0 V
714 2712 M
63 0 V
1865 0 R
-63 0 V
stroke
630 2712 M
1.000 UL
LTb
714 420 M
0 63 V
0 2229 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 84)]
] -46.7 MCshow
1.000 UL
LTb
1100 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1100 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 88)]
] -46.7 MCshow
1.000 UL
LTb
1485 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1485 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 92)]
] -46.7 MCshow
1.000 UL
LTb
1871 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1871 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 96)]
] -46.7 MCshow
1.000 UL
LTb
2256 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2256 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 104)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
grestore
LTb
LCb setrgbcolor
1678 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (minisat)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 978 M
386 368 V
386 378 V
810 964 M
0 26 V
779 964 M
62 0 V
-62 26 R
62 0 V
355 342 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
355 353 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
810 978 Pls
1196 1346 Pls
1582 1724 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (march_hi)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 1280 M
386 415 V
386 402 V
810 1279 M
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
355 411 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
355 398 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
810 1280 Crs
1196 1695 Crs
1582 2097 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (clasp)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
810 823 M
386 374 V
386 383 V
385 370 V
386 369 V
810 802 M
0 40 V
779 802 M
62 0 V
-62 40 R
62 0 V
355 331 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
355 342 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
354 331 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
355 328 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
810 823 Star
1196 1197 Star
1582 1580 Star
1967 1950 Star
2353 2319 Star
2274 553 Star
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 1386 1627 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 1386 1627 a 2283 1627 a
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 2283
1627 a @beginspecial 50 @llx 50 @lly 338 @urx 338 @ury
2880 @rwi @setspecial
%%BeginDocument: unsatplots/sgen1-sgen2del-085-093-C.eps
%!PS-Adobe-2.0
%%Title: sgen1-sgen2del-085-093-three.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Tue Feb 09 19:41:29 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sgen1-sgen2del-085-093-three.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 09 19:41:29 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
1865 0 R
-63 0 V
stroke
630 420 M
1.000 UL
LTb
714 765 M
31 0 V
1897 0 R
-31 0 V
714 967 M
31 0 V
1897 0 R
-31 0 V
714 1110 M
31 0 V
1897 0 R
-31 0 V
714 1221 M
31 0 V
1897 0 R
-31 0 V
714 1312 M
31 0 V
1897 0 R
-31 0 V
714 1388 M
31 0 V
1897 0 R
-31 0 V
714 1455 M
31 0 V
1897 0 R
-31 0 V
714 1514 M
31 0 V
1897 0 R
-31 0 V
714 1566 M
63 0 V
1865 0 R
-63 0 V
stroke
630 1566 M
1.000 UL
LTb
714 1911 M
31 0 V
1897 0 R
-31 0 V
714 2113 M
31 0 V
1897 0 R
-31 0 V
714 2256 M
31 0 V
1897 0 R
-31 0 V
714 2367 M
31 0 V
1897 0 R
-31 0 V
714 2458 M
31 0 V
1897 0 R
-31 0 V
714 2534 M
31 0 V
1897 0 R
-31 0 V
714 2601 M
31 0 V
1897 0 R
-31 0 V
714 2660 M
31 0 V
1897 0 R
-31 0 V
714 2712 M
63 0 V
1865 0 R
-63 0 V
stroke
630 2712 M
1.000 UL
LTb
714 420 M
0 63 V
0 2229 R
0 -63 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 84)]
] -46.7 MCshow
1.000 UL
LTb
1100 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1100 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 86)]
] -46.7 MCshow
1.000 UL
LTb
1485 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1485 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 88)]
] -46.7 MCshow
1.000 UL
LTb
1871 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1871 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MCshow
1.000 UL
LTb
2256 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2256 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 92)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 94)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
grestore
LTb
LCb setrgbcolor
1678 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (minisat)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
907 882 M
771 822 V
771 856 V
907 867 M
0 30 V
876 867 M
62 0 V
-62 30 R
62 0 V
740 789 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
740 823 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
907 882 Pls
1678 1704 Pls
2449 2560 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (march_hi)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
907 1282 M
771 579 V
771 640 V
907 1281 M
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
740 571 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
740 622 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
907 1282 Crs
1678 1861 Crs
2449 2501 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (clasp)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
907 712 M
771 809 V
771 866 V
907 685 M
0 52 V
876 685 M
62 0 V
-62 52 R
62 0 V
740 761 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
740 826 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
907 712 Star
1678 1521 Star
2449 2387 Star
2274 553 Star
1.000 UL
LTb
714 2712 N
714 420 L
1928 0 V
0 2292 V
-1928 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 2283 1627 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 2283 1627 a 623 1719 a Fu(Fig)o(.)12
b(2.)18 b Ft(Gro)n(wth)h(rates)g(of)g(solving)h(times)e(for)h(unsat)h
(benchmarks)g(produced)h(by)e(three)h(generators.)523
2008 y Fz(3D)g(appears)f(to)i(be)f(ne)n(w)f(and)h(quite)g(dif)n(ferent)
e(from)h(other)g(combinatorial)f(designs)i(that)g(in)m(v)n(olv)o(e)523
2107 y(three)g(dimensions,)f(such)g(as)i(Room)f(squares,)g(used)g(to)g
(schedule)f(leagues)h(and)f(tournaments.)523 2284 y Fn(De\002nition)h
(4.1.)40 b Fz(W)-7 b(e)22 b(de\002ne)e(a)g(3D)h Fp(\(0)p
Fo(;)14 b Fp(1\))20 b Fz(design)g(directly)f(in)i(terms)f(of)g(the)g
(3D)h(incidence)e(ma-)523 2384 y(trix,)h Fo(M)761 2396
y Fy(3)797 2384 y Fz(,)h(of)e(size)i Fo(v)g Fk(\002)c
Fo(v)j Fk(\002)d Fo(v)s Fz(.)k(Besides)g(objects)e(and)h(blocks)f(a)h
(third)g(collection,)e(called)i Fm(layer)o(s)p Fz(,)523
2483 y(is)i(introduced.)d(Although)g(there)i(are)g(man)o(y)f(more)g
(matrix)h(cells,)g(the)g(number)f(of)h(\003ags)g(remains)523
2583 y(at)g Fo(v)c(r)26 b Fp(=)c Fo(b)14 b(k)s Fz(.)20
b(Let)g Fo(`)h Fz(denote)e(layer)m(,)g(from)g(1)h(to)h
Fo(v)s Fz(,)g(so)f Fo(M)2171 2595 y Fy(3)2229 2583 y
Fz(is)h(inde)o(x)o(ed)d(by)i Fp(\()p Fo(r)n(;)14 b(c;)g(`)p
Fp(\))p Fz(.)648 2683 y(The)k(\002rst)i(constraint)e(on)g(\003ags)h(is)
h(that)f(for)f(an)o(y)g(tw)o(o)h(\002x)o(ed)g(indices,)f(at)h(most)g
(one)f(third)h(inde)o(x)523 2783 y(contains)k(a)i(\003ag.)f(That)g(is,)
g(for)g(a)g(\002x)o(ed)g(pair)g Fp(\()p Fo(r)n(;)14 b(c)p
Fp(\))p Fz(,)24 b(at)h(most)f(one)g(cell)g(of)g(the)g(form)f
Fo(M)3124 2795 y Fy(3)3161 2783 y Fp(\()p Fo(r)n(;)14
b(c;)g(`)p Fp(\))523 2882 y Fz(has)23 b(a)g(\003ag,)g(and)f(so)i(forth)
d(for)i(other)f(inde)o(x)f(combinations.)g(Note)i(that)g(a)g(3D)g
Fp(\(0)p Fo(;)14 b Fp(1\))23 b Fz(design)f(can)523 2982
y(be)e(represented)e(in)i(a)g(2D)g(matrix,)f(say)h Fo(M)9
b Fz(,)19 b(inde)o(x)o(ed)f(on)h Fp(\()p Fo(r)n(;)14
b(c)p Fp(\))21 b Fz(by)f(letting)f(each)h(\003ag)g(contain)e(the)523
3082 y(v)n(alue)i(of)f(the)i Fm(layer)h Fz(that)e(it)h(is)g(in.)648
3182 y(The)e(size)i(of)f(an)g(object)f(is)i(no)n(w)e(found)g(by)g
(counting)f(the)i(\003ags)h(in)f(that)g(ro)n(w)g(for)f(all)i(columns)
523 3281 y(and)k(layers;)g(for)g(the)h(size)g(of)f(a)h(block,)e(count)g
(\003ags)i(in)g(that)f(column)g(for)f(all)i(ro)n(ws)g(and)f(layers;)523
3381 y(and)g(for)f(the)h(size)h(of)f(a)h(layer)m(,)e(count)g(the)h
(\003ags)h(in)f(that)g(layer)m(,)f(for)h(all)g(ro)n(ws)g(and)g
(columns.)f(All)523 3481 y(objects,)c(blocks,)f(and)h(layers)g(are)g
(required)e(to)j(ha)n(v)o(e)e(size)i Fo(k)26 b Fp(=)d
Fo(r)r Fz(.)648 3581 y(The)18 b(intersection)g(constraint)g(is)h(most)g
(easily)g(stated)g(by)g(requiring)e(that,)h(if)h(an)o(y)f(one)h(dimen-)
523 3680 y(sion)h(is)h(projected)e(out,)h(the)g(2D)g(matrix)g
(represents)f(a)h Fp(\(0)p Fo(;)14 b Fp(1\))21 b Fz(design.)p
2596 3614 67 4 v 2596 3680 4 67 v 2659 3680 V 2596 3683
67 4 v 648 3857 a(A)34 b(3D)f Fp(\()p Fo(v)s(;)14 b Fp(5)p
Fo(;)g Fp(\(0)p Fo(;)g Fp(1\)\))34 b Fz(design)f(can)h(be)g(generated,)
d(in)j(some)g(cases,)g(by)f(a)h(v)n(ariant)f(of)g(the)523
3956 y(method)17 b(sho)n(wn)g(in)i(Figure)e(1)h(\(left\),)g(by)f(ha)n
(ving)h(each)f(\003ag)i(contain)e(its)i(layer)f(number)m(,)d(as)k(sho)n
(wn)523 4056 y(on)h(the)g(right)g(side)g(of)g(that)g(\002gure.)g(This)g
(method)f(w)o(orks)h(in)g(practice)f(for)h(odd)f Fo(v)27
b Fk(\025)22 b Fp(21)p Fz(.)523 4324 y Fq(5)99 b(Experimental)26
b(Results)523 4526 y Fz(Benchmarks)e(generated)f(by)i(the)g(methods)g
(described)f(were)h(put)g(through)e(a)i(computationally)523
4625 y(e)o(xpensi)n(v)o(e)c(e)n(v)n(aluation)g(on)i(se)n(v)o(eral)f
(multi-core)g(2.5)g(GHz)h(Linux)f(machines.)g(W)m(ith)h(the)g(goal)g
(of)523 4725 y(getting)e(statistically)h(meaningful)d(results,)j(each)f
(generation)e(method)i(at)h(each)f(size)h(w)o(as)g(tested)523
4825 y(on)17 b(a)h(sample)f(of)h(40)f(benchmarks.)e(See)j(Figure)f(2)g
(for)g(an)h(o)o(v)o(ervie)n(w)d(of)j(the)f(unsatis\002able)g(results.)p
eop
%%Page: 8 8
8 7 bop 490 1511 a
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 490 1511 a @beginspecial 50 @llx 50
@lly 338 @urx 338 @ury 2880 @rwi @setspecial
%%BeginDocument: unsatplots/clasp-unsat-vars-A.eps
%!PS-Adobe-2.0
%%Title: clasp-unsat-vars.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Mon Apr 12 13:05:18 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clasp-unsat-vars.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 12 13:05:18 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
1781 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
798 592 M
31 0 V
1813 0 R
-31 0 V
798 693 M
31 0 V
1813 0 R
-31 0 V
798 765 M
31 0 V
1813 0 R
-31 0 V
798 821 M
31 0 V
1813 0 R
-31 0 V
798 866 M
31 0 V
1813 0 R
-31 0 V
798 904 M
31 0 V
1813 0 R
-31 0 V
798 937 M
31 0 V
1813 0 R
-31 0 V
798 967 M
31 0 V
1813 0 R
-31 0 V
798 993 M
63 0 V
1781 0 R
-63 0 V
stroke
714 993 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
798 1165 M
31 0 V
1813 0 R
-31 0 V
798 1266 M
31 0 V
1813 0 R
-31 0 V
798 1338 M
31 0 V
1813 0 R
-31 0 V
798 1394 M
31 0 V
1813 0 R
-31 0 V
798 1439 M
31 0 V
1813 0 R
-31 0 V
798 1477 M
31 0 V
1813 0 R
-31 0 V
798 1510 M
31 0 V
1813 0 R
-31 0 V
798 1540 M
31 0 V
1813 0 R
-31 0 V
798 1566 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1566 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
798 1738 M
31 0 V
1813 0 R
-31 0 V
798 1839 M
31 0 V
1813 0 R
-31 0 V
798 1911 M
31 0 V
1813 0 R
-31 0 V
798 1967 M
31 0 V
1813 0 R
-31 0 V
798 2012 M
31 0 V
1813 0 R
-31 0 V
798 2050 M
31 0 V
1813 0 R
-31 0 V
798 2083 M
31 0 V
1813 0 R
-31 0 V
798 2113 M
31 0 V
1813 0 R
-31 0 V
798 2139 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2139 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
798 2311 M
31 0 V
1813 0 R
-31 0 V
798 2412 M
31 0 V
1813 0 R
-31 0 V
798 2484 M
31 0 V
1813 0 R
-31 0 V
798 2540 M
31 0 V
1813 0 R
-31 0 V
798 2585 M
31 0 V
1813 0 R
-31 0 V
798 2623 M
31 0 V
1813 0 R
-31 0 V
798 2656 M
31 0 V
1813 0 R
-31 0 V
798 2686 M
31 0 V
1813 0 R
-31 0 V
798 2712 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2712 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
798 420 M
0 63 V
0 2229 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 84)]
] -46.7 MCshow
1.000 UL
LTb
1167 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1167 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 88)]
] -46.7 MCshow
1.000 UL
LTb
1536 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1536 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 92)]
] -46.7 MCshow
1.000 UL
LTb
1904 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1904 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 96)]
] -46.7 MCshow
1.000 UL
LTb
2273 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2273 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 104)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Execution time \(minutes\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
1720 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-orig)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
890 1172 M
369 186 V
369 167 V
369 204 V
368 177 V
890 1161 M
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
338 169 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
338 147 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
338 180 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
337 156 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
890 1172 Pls
1259 1358 Pls
1628 1525 Pls
1997 1729 Pls
2365 1906 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-scores)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
890 1194 M
369 187 V
369 192 V
369 185 V
368 185 V
890 1184 M
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
338 166 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
338 171 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
338 166 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
337 164 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
890 1194 Crs
1259 1381 Crs
1628 1573 Crs
1997 1758 Crs
2365 1943 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen2del)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
890 1167 M
369 420 V
369 405 V
369 377 V
890 1155 M
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
338 401 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
338 392 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
338 363 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
890 1167 Star
1259 1587 Star
1628 1992 Star
1997 2369 Star
2274 553 Star
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 490 1511 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 490 1511 a 1386 1511 a
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 1386 1511
a @beginspecial 50 @llx 50 @lly 338 @urx 338 @ury 2880
@rwi @setspecial
%%BeginDocument: unsatplots/clasp-tts-vars-B.eps
%!PS-Adobe-2.0
%%Title: clasp-tts-vars.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Mon Apr 12 13:05:31 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clasp-tts-vars.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 12 13:05:31 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
798 420 M
63 0 V
1781 0 R
-63 0 V
stroke
714 420 M
1.000 UL
LTb
798 592 M
31 0 V
1813 0 R
-31 0 V
798 693 M
31 0 V
1813 0 R
-31 0 V
798 765 M
31 0 V
1813 0 R
-31 0 V
798 821 M
31 0 V
1813 0 R
-31 0 V
798 866 M
31 0 V
1813 0 R
-31 0 V
798 904 M
31 0 V
1813 0 R
-31 0 V
798 937 M
31 0 V
1813 0 R
-31 0 V
798 967 M
31 0 V
1813 0 R
-31 0 V
798 993 M
63 0 V
1781 0 R
-63 0 V
stroke
714 993 M
1.000 UL
LTb
798 1165 M
31 0 V
1813 0 R
-31 0 V
798 1266 M
31 0 V
1813 0 R
-31 0 V
798 1338 M
31 0 V
1813 0 R
-31 0 V
798 1394 M
31 0 V
1813 0 R
-31 0 V
798 1439 M
31 0 V
1813 0 R
-31 0 V
798 1477 M
31 0 V
1813 0 R
-31 0 V
798 1510 M
31 0 V
1813 0 R
-31 0 V
798 1540 M
31 0 V
1813 0 R
-31 0 V
798 1566 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1566 M
1.000 UL
LTb
798 1738 M
31 0 V
1813 0 R
-31 0 V
798 1839 M
31 0 V
1813 0 R
-31 0 V
798 1911 M
31 0 V
1813 0 R
-31 0 V
798 1967 M
31 0 V
1813 0 R
-31 0 V
798 2012 M
31 0 V
1813 0 R
-31 0 V
798 2050 M
31 0 V
1813 0 R
-31 0 V
798 2083 M
31 0 V
1813 0 R
-31 0 V
798 2113 M
31 0 V
1813 0 R
-31 0 V
798 2139 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2139 M
1.000 UL
LTb
798 2311 M
31 0 V
1813 0 R
-31 0 V
798 2412 M
31 0 V
1813 0 R
-31 0 V
798 2484 M
31 0 V
1813 0 R
-31 0 V
798 2540 M
31 0 V
1813 0 R
-31 0 V
798 2585 M
31 0 V
1813 0 R
-31 0 V
798 2623 M
31 0 V
1813 0 R
-31 0 V
798 2656 M
31 0 V
1813 0 R
-31 0 V
798 2686 M
31 0 V
1813 0 R
-31 0 V
798 2712 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2712 M
1.000 UL
LTb
798 420 M
0 63 V
0 2229 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 84)]
] -46.7 MCshow
1.000 UL
LTb
1167 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1167 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 88)]
] -46.7 MCshow
1.000 UL
LTb
1536 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1536 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 92)]
] -46.7 MCshow
1.000 UL
LTb
1904 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1904 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 96)]
] -46.7 MCshow
1.000 UL
LTb
2273 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2273 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 104)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
grestore
LTb
LCb setrgbcolor
1720 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LTb
1991 973 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(a\))]
] -46.7 MRshow
LT0
LC0 setrgbcolor
2075 973 M
399 0 V
890 1194 M
369 187 V
369 192 V
369 185 V
368 185 V
890 1194 Pls
1259 1381 Pls
1628 1573 Pls
1997 1758 Pls
2365 1943 Pls
2274 973 Pls
1.000 UP
1.000 UL
LT1
LC2 setrgbcolor
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(b\))]
] -46.7 MRshow
LT1
LC2 setrgbcolor
2075 833 M
399 0 V
890 1167 M
369 420 V
369 405 V
369 377 V
890 1167 Crs
1259 1587 Crs
1628 1992 Crs
1997 2369 Crs
2274 833 Crs
1.000 UP
1.000 UL
LT2
LC0 setrgbcolor
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(c\))]
] -46.7 MRshow
LT2
LC0 setrgbcolor
2075 693 M
399 0 V
890 780 M
369 96 V
369 195 V
369 168 V
368 112 V
890 780 Star
1259 876 Star
1628 1071 Star
1997 1239 Star
2365 1351 Star
2274 693 Star
1.000 UP
1.000 UL
LT3
LC2 setrgbcolor
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(d\))]
] -46.7 MRshow
LT3
LC2 setrgbcolor
2075 553 M
399 0 V
890 502 M
369 512 V
369 610 V
890 502 Box
1259 1014 Box
1628 1624 Box
2274 553 Box
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 1386 1511 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 1386 1511 a 2283 1511 a
 currentpoint currentpoint translate 0.48 0.48 scale neg exch neg exch
translate
 2283
1511 a @beginspecial 50 @llx 50 @lly 338 @urx 338 @ury
2880 @rwi @setspecial
%%BeginDocument: unsatplots/clasp-tts-lits-C.eps
%!PS-Adobe-2.0
%%Title: clasp-tts-lits.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Mon Apr 12 13:05:31 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clasp-tts-lits.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 12 13:05:31 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
798 420 M
63 0 V
1781 0 R
-63 0 V
stroke
714 420 M
1.000 UL
LTb
798 592 M
31 0 V
1813 0 R
-31 0 V
798 693 M
31 0 V
1813 0 R
-31 0 V
798 765 M
31 0 V
1813 0 R
-31 0 V
798 821 M
31 0 V
1813 0 R
-31 0 V
798 866 M
31 0 V
1813 0 R
-31 0 V
798 904 M
31 0 V
1813 0 R
-31 0 V
798 937 M
31 0 V
1813 0 R
-31 0 V
798 967 M
31 0 V
1813 0 R
-31 0 V
798 993 M
63 0 V
1781 0 R
-63 0 V
stroke
714 993 M
1.000 UL
LTb
798 1165 M
31 0 V
1813 0 R
-31 0 V
798 1266 M
31 0 V
1813 0 R
-31 0 V
798 1338 M
31 0 V
1813 0 R
-31 0 V
798 1394 M
31 0 V
1813 0 R
-31 0 V
798 1439 M
31 0 V
1813 0 R
-31 0 V
798 1477 M
31 0 V
1813 0 R
-31 0 V
798 1510 M
31 0 V
1813 0 R
-31 0 V
798 1540 M
31 0 V
1813 0 R
-31 0 V
798 1566 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1566 M
1.000 UL
LTb
798 1738 M
31 0 V
1813 0 R
-31 0 V
798 1839 M
31 0 V
1813 0 R
-31 0 V
798 1911 M
31 0 V
1813 0 R
-31 0 V
798 1967 M
31 0 V
1813 0 R
-31 0 V
798 2012 M
31 0 V
1813 0 R
-31 0 V
798 2050 M
31 0 V
1813 0 R
-31 0 V
798 2083 M
31 0 V
1813 0 R
-31 0 V
798 2113 M
31 0 V
1813 0 R
-31 0 V
798 2139 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2139 M
1.000 UL
LTb
798 2311 M
31 0 V
1813 0 R
-31 0 V
798 2412 M
31 0 V
1813 0 R
-31 0 V
798 2484 M
31 0 V
1813 0 R
-31 0 V
798 2540 M
31 0 V
1813 0 R
-31 0 V
798 2585 M
31 0 V
1813 0 R
-31 0 V
798 2623 M
31 0 V
1813 0 R
-31 0 V
798 2656 M
31 0 V
1813 0 R
-31 0 V
798 2686 M
31 0 V
1813 0 R
-31 0 V
798 2712 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2712 M
1.000 UL
LTb
798 420 M
0 63 V
0 2229 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
1259 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1259 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
1720 420 M
0 63 V
0 2229 R
0 -63 V
stroke
1720 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 700)]
] -46.7 MCshow
1.000 UL
LTb
2181 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2181 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 2229 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 900)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
LCb setrgbcolor
140 1566 M
currentpoint gsave translate 90 rotate 0 0 moveto
grestore
LTb
LCb setrgbcolor
1720 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of literals)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LTb
1991 973 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(a\))]
] -46.7 MRshow
LT0
LC0 setrgbcolor
2075 973 M
399 0 V
982 1194 M
111 187 V
111 192 V
110 185 V
111 185 V
982 1194 Pls
1093 1381 Pls
1204 1573 Pls
1314 1758 Pls
1425 1943 Pls
2274 973 Pls
1.000 UP
1.000 UL
LT1
LC2 setrgbcolor
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(b\))]
] -46.7 MRshow
LT1
LC2 setrgbcolor
2075 833 M
399 0 V
982 1167 M
480 420 V
479 405 V
480 377 V
982 1167 Crs
1462 1587 Crs
1941 1992 Crs
2421 2369 Crs
2274 833 Crs
1.000 UP
1.000 UL
LT2
LC0 setrgbcolor
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(c\))]
] -46.7 MRshow
LT2
LC0 setrgbcolor
2075 693 M
399 0 V
982 780 M
111 96 V
111 195 V
110 168 V
111 112 V
982 780 Star
1093 876 Star
1204 1071 Star
1314 1239 Star
1425 1351 Star
2274 693 Star
1.000 UP
1.000 UL
LT3
LC2 setrgbcolor
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(d\))]
] -46.7 MRshow
LT3
LC2 setrgbcolor
2075 553 M
399 0 V
982 502 M
480 512 V
479 610 V
982 502 Box
1462 1014 Box
1941 1624 Box
2274 553 Box
1.000 UL
LTb
798 2712 N
798 420 L
1844 0 V
0 2292 V
-1844 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 2283 1511 a
 currentpoint currentpoint translate 1 0.48 div 1 0.48 div scale neg
exch neg exch translate
 2283 1511 a 523 1602 a Fu(Fig)o(.)12
b(3.)18 b Ft(\(Left\))f(T)m(ime)h(gro)n(wth)h(for)f Fw(clasp)h
Ft(on)g(formulas)g(from)f(three)g(generators,)h(as)f(a)g(function)h(of)
g(number)523 1694 y(of)28 b(v)n(ariables.)g(\(Center)m(,)f(Right\))g(T)
m(ime)g(gro)n(wth)i(for)e(tw)o(o)h(size)f(measures,)h(v)n(ariables)h
(\(center\),)e(and)h(liter)o(-)523 1785 y(als)23 b(\(right\).)f
Fw(clasp)i Ft(times)f(are)g(for)g(\223)p Fc(scores)p
Ft(\224)h(\(a\),)e(\223)p Fc(sgen2del)p Ft(\224)f(\(b\).)h
Fw(tts)i Ft(times)f(are)g(for)g(\223)p Fc(scores)p Ft(\224)g(\(c\),)523
1876 y(\223)p Fc(sgen2del)p Ft(\224)16 b(\(d\).)648 2185
y Fz(Some)30 b(of)h(the)g(better)n(-performing)c(solv)o(ers)j(in)h(the)
g(SA)-9 b(T)31 b(2009)e(were)i(used;)g(we)g(used)f(the)523
2284 y(static)i(binaries)e(from)f(the)i(computation)d(web)j(page.)f
(The)g(clause-learning)e(solv)o(ers)j(selected)523 2384
y(were)18 b Fb(clasp)f Fz([GKNS07)o(])h(and)g Fb(minisat2)d
Fz([ES05)o(].)j(W)-7 b(e)20 b(chose)e Fb(march)p 2665
2384 27 4 v 29 w(hi)g Fz(because)g(it)h(is)g(based)523
2484 y(on)f(look-ahead)e(and)i(is)h Fm(not)h Fz(in)f(the)f
(clause-learning)e(f)o(amily)-5 b(.)18 b(Local)g(search)g(w)o(as)h
(represented)e(by)523 2583 y Fb(adaptg2wsat2009+)o(+)e
Fz(\()p Fb(adapt)j Fz(for)i(short\).)648 2693 y(Some)15
b(well-performing)e(solv)o(ers)i(were)h(not)f(used,)h(due)f(to)h
(limited)g(resources.)f(F)o(or)g(e)o(xample,)523 2792
y Fb(precosat)j Fz(tested)k(considerably)d(slo)n(wer)i(than)g
Fb(minisat2)d Fz(on)j(our)f(smallest)i(benchmarks)d(and)523
2892 y(is)24 b(also)f(in)g(the)g(clause-learning)e(f)o(amily)-5
b(,)22 b(while)h Fb(satzilla)d Fz(is)k(a)g(portfolio)d(solv)o(er)h
(from)g(which)523 2992 y(it)f(w)o(ould)e(be)i(dif)n(\002cult)e(to)i
(dra)o(w)e(an)o(y)g(conclusions.)648 3101 y(All)24 b(benchmarks)d(were)
i(run)g(to)h(completion)d(with)j(no)f(time-outs.)f(Statistics)j
(computed)d(on)523 3201 y(each)k(sample)g(of)g(40)g(included)f(mean,)g
(standard)g(error)g(\(seen)h(as)h(barely)f(visible)g(error)f(bars)h(in)
523 3301 y(Figure)i(2\),)h(minimum,)e(and)h(maximum.)f(The)i
Fm(standar)m(d)e(err)l(or)32 b Fz(estimates)e(ho)n(w)e(dif)n(ferent)f
(the)523 3400 y(calculated)19 b(mean)h(is)h(lik)o(ely)f(to)g(be)h(for)e
(an)h(independently)d(dra)o(wn)i(sample)h(of)g(the)g(same)h(size)g
Fo(n)p Fz(.)648 3510 y(Gro)n(wth)k(rates)i(are)f(estimated)h(using)f
(tw)o(o)g(size)i(measures:)e(v)n(ariables)f(and)h(literals.)h(While)523
3609 y(v)n(ariables)22 b(might)g(not)g(be)g(an)g(appropriate)f(size)i
(measure)e(on)h(some)h(classes)g(of)f(benchmark,)e(for)523
3709 y(ours)15 b(it)i(is)g(reasonable)d(because)h(the)h(number)e(of)h
(literals)h(w)o(as)h(linear)e(in)h(the)g(number)e(of)i(v)n(ariables.)
523 3809 y(Noting)28 b(that)h(a)g(straight)f(line)h(on)g(a)g(semi-log)f
(plot)g(represents)g(an)h(e)o(xponential)d(function,)h(we)523
3908 y(observ)o(ed)j(e)o(xponential)f(gro)n(wth)i(rates)h(in)g(all)g
(solv)o(ers,)f(for)g(all)i(generation)d(methods,)g(on)h(the)523
4008 y(unsatis\002able)20 b(benchmarks.)648 4117 y(The)d(original)h
(generation)e(method)h(of)h(Spence)f([Spe10)n(])i(can)f(be)g(seen)h(as)
f(an)h(approximation)523 4217 y(of)24 b(our)f(methods)g(based)h(on)f
Fp(\(0)p Fo(;)14 b Fp(1\))25 b Fz(designs.)e(Did)h(using)g
Fp(\(0)p Fo(;)14 b Fp(1\))24 b Fz(designs)g(create)f(harder)g(bench-)
523 4317 y(marks?)j(The)g(e)n(vidence)g(is)h(that)g(the)o(y)f(did,)g
(for)g(the)h(unsatis\002able)f(cases.)h(The)g(plot)f(on)h(the)f(left)
523 4416 y(of)f(Figure)f(3)i(sho)n(ws)f(that)g(\223)p
Fd(scores)p Fz(\224)f(\(short)g(for)h(\223zero)f(scores\224\))h(were)g
(de\002nitely)f(harder)g(than)523 4516 y(\223)p Fd(or)q(ig)p
Fz(\224)j(for)f Fb(clasp)p Fz(,)f(with)h(a)h(separation)e(of)h(about)g
(tw)o(o)g(standard)f(errors.)h(Other)g(solv)o(ers)g(were)523
4616 y(similar)-5 b(.)648 4725 y(The)28 b(other)h(type,)f(\223)p
Fd(sgen2del)p Fz(,)-6 b(\224)30 b(used)f(a)g(more)g(general)e(encoding)
g(scheme)i(that)g(allo)n(wed)523 4825 y(it)i(to)f(gro)n(w)f(in)h(dif)n
(\002culty)f(the)h(most)g(rapidly)-5 b(,)28 b(based)i(on)f(the)i
(numbers)d(of)i(v)n(ariables,)f(as)h(seen)523 4924 y(in)i(Figure)g(3)g
(\(left\),)g(for)f Fb(clasp)p Fz(.)g(Other)g(solv)o(ers)h(were)g
(similar)-5 b(.)33 b(Ho)n(we)n(v)o(er)m(,)d(Figure)h(3)h(sho)n(ws)p
eop
%%Page: 9 9
9 8 bop 523 1777 a
 currentpoint currentpoint translate 0.58 0.58 scale neg exch neg exch
translate
 523 1777 a @beginspecial 50 @llx 50
@lly 338 @urx 338 @ury 2880 @rwi @setspecial
%%BeginDocument: satplots/clasp-sat.eps
%!PS-Adobe-2.0
%%Title: clasp-sat.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Tue Feb 09 19:52:33 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (clasp-sat.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 09 19:52:33 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
1781 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
798 727 M
31 0 V
1813 0 R
-31 0 V
798 907 M
31 0 V
1813 0 R
-31 0 V
798 1034 M
31 0 V
1813 0 R
-31 0 V
798 1133 M
31 0 V
1813 0 R
-31 0 V
798 1214 M
31 0 V
1813 0 R
-31 0 V
798 1282 M
31 0 V
1813 0 R
-31 0 V
798 1341 M
31 0 V
1813 0 R
-31 0 V
798 1393 M
31 0 V
1813 0 R
-31 0 V
798 1440 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1440 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
798 1747 M
31 0 V
1813 0 R
-31 0 V
798 1927 M
31 0 V
1813 0 R
-31 0 V
798 2054 M
31 0 V
1813 0 R
-31 0 V
798 2153 M
31 0 V
1813 0 R
-31 0 V
798 2234 M
31 0 V
1813 0 R
-31 0 V
798 2302 M
31 0 V
1813 0 R
-31 0 V
798 2361 M
31 0 V
1813 0 R
-31 0 V
798 2413 M
31 0 V
1813 0 R
-31 0 V
798 2460 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2460 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
798 420 M
0 63 V
0 1977 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 170)]
] -46.7 MCshow
1.000 UL
LTb
1105 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1105 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1413 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1413 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 190)]
] -46.7 MCshow
1.000 UL
LTb
1720 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1720 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
2027 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2027 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 210)]
] -46.7 MCshow
1.000 UL
LTb
2335 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2335 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 220)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 230)]
] -46.7 MCshow
1.000 UL
LTb
1105 2460 M
0 -63 V
stroke
1105 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1080)]
] -46.7 MCshow
1.000 UL
LTb
1720 2460 M
0 -63 V
stroke
1720 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1200)]
] -46.7 MCshow
1.000 UL
LTb
2335 2460 M
0 -63 V
stroke
2335 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1320)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 2460 N
798 420 L
1844 0 V
0 2040 V
-1844 0 V
Z stroke
LCb setrgbcolor
140 1440 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Execution time \(minutes\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
1720 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
LCb setrgbcolor
1720 2809 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of literals)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (3way)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1259 843 M
307 580 V
1259 780 M
0 118 V
1228 780 M
62 0 V
-62 118 R
62 0 V
276 479 R
0 87 V
-31 -87 R
62 0 V
-62 87 R
62 0 V
1259 843 Pls
1566 1423 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-orig)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
952 716 M
307 426 V
307 392 V
952 674 M
0 80 V
921 674 M
62 0 V
-62 80 R
62 0 V
276 349 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
276 320 R
0 69 V
-31 -69 R
62 0 V
-62 69 R
62 0 V
952 716 Crs
1259 1142 Crs
1566 1534 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-scores)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
952 707 M
307 448 V
307 357 V
952 660 M
0 90 V
921 660 M
62 0 V
-62 90 R
62 0 V
276 372 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
276 282 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
952 707 Star
1259 1155 Star
1566 1512 Star
2274 553 Star
1.000 UL
LTb
798 2460 N
798 420 L
1844 0 V
0 2040 V
-1844 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 523 1777 a
 currentpoint currentpoint translate 1 0.58 div 1 0.58 div scale neg
exch neg exch translate
 523 1777 a 1993 1777 a
 currentpoint currentpoint translate 0.58 0.58 scale neg exch neg exch
translate
 1993 1777
a @beginspecial 50 @llx 50 @lly 338 @urx 338 @ury 2880
@rwi @setspecial
%%BeginDocument: satplots/adapt-sat.eps
%!PS-Adobe-2.0
%%Title: adapt-sat.eps
%%Creator: gnuplot 4.2 patchlevel rc3
%%CreationDate: Tue Feb 09 19:52:33 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (adapt-sat.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel rc3)
  /Author (ispence)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb 09 19:52:33 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
1781 0 R
-63 0 V
stroke
714 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
798 625 M
31 0 V
1813 0 R
-31 0 V
798 744 M
31 0 V
1813 0 R
-31 0 V
798 829 M
31 0 V
1813 0 R
-31 0 V
798 895 M
31 0 V
1813 0 R
-31 0 V
798 949 M
31 0 V
1813 0 R
-31 0 V
798 995 M
31 0 V
1813 0 R
-31 0 V
798 1034 M
31 0 V
1813 0 R
-31 0 V
798 1069 M
31 0 V
1813 0 R
-31 0 V
798 1100 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1100 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
798 1305 M
31 0 V
1813 0 R
-31 0 V
798 1424 M
31 0 V
1813 0 R
-31 0 V
798 1509 M
31 0 V
1813 0 R
-31 0 V
798 1575 M
31 0 V
1813 0 R
-31 0 V
798 1629 M
31 0 V
1813 0 R
-31 0 V
798 1675 M
31 0 V
1813 0 R
-31 0 V
798 1714 M
31 0 V
1813 0 R
-31 0 V
798 1749 M
31 0 V
1813 0 R
-31 0 V
798 1780 M
63 0 V
1781 0 R
-63 0 V
stroke
714 1780 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
798 1985 M
31 0 V
1813 0 R
-31 0 V
798 2104 M
31 0 V
1813 0 R
-31 0 V
798 2189 M
31 0 V
1813 0 R
-31 0 V
798 2255 M
31 0 V
1813 0 R
-31 0 V
798 2309 M
31 0 V
1813 0 R
-31 0 V
798 2355 M
31 0 V
1813 0 R
-31 0 V
798 2394 M
31 0 V
1813 0 R
-31 0 V
798 2429 M
31 0 V
1813 0 R
-31 0 V
798 2460 M
63 0 V
1781 0 R
-63 0 V
stroke
714 2460 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
798 420 M
0 63 V
0 1977 R
0 -63 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 170)]
] -46.7 MCshow
1.000 UL
LTb
1105 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1105 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 180)]
] -46.7 MCshow
1.000 UL
LTb
1413 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1413 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 190)]
] -46.7 MCshow
1.000 UL
LTb
1720 420 M
0 63 V
0 1977 R
0 -63 V
stroke
1720 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
2027 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2027 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 210)]
] -46.7 MCshow
1.000 UL
LTb
2335 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2335 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 220)]
] -46.7 MCshow
1.000 UL
LTb
2642 420 M
0 63 V
0 1977 R
0 -63 V
stroke
2642 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 230)]
] -46.7 MCshow
1.000 UL
LTb
1105 2460 M
0 -63 V
stroke
1105 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1080)]
] -46.7 MCshow
1.000 UL
LTb
1720 2460 M
0 -63 V
stroke
1720 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1200)]
] -46.7 MCshow
1.000 UL
LTb
2335 2460 M
0 -63 V
stroke
2335 2600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1320)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
798 2460 N
798 420 L
1844 0 V
0 2040 V
-1844 0 V
Z stroke
LCb setrgbcolor
140 1440 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Execution time \(minutes\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
1720 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of variables)]
] -46.7 MCshow
LTb
LCb setrgbcolor
1720 2809 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of literals)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1991 833 M
[ [(Helvetica) 140.0 0.0 true true 0 (3way)]
] -46.7 MRshow
LT0
2075 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1259 1091 M
307 317 V
308 86 V
307 170 V
307 167 V
1259 1009 M
0 146 V
-31 -146 R
62 0 V
-62 146 R
62 0 V
276 197 R
0 104 V
-31 -104 R
62 0 V
-62 104 R
62 0 V
277 -28 R
0 121 V
-31 -121 R
62 0 V
-62 121 R
62 0 V
276 71 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
276 79 R
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
1259 1091 Pls
1566 1408 Pls
1874 1494 Pls
2181 1664 Pls
2488 1831 Pls
2274 833 Pls
1.000 UP
1.000 UL
LT1
LTb
1991 693 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-orig)]
] -46.7 MRshow
LT1
2075 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
952 1048 M
307 141 V
307 292 V
308 -28 V
307 222 V
307 162 V
952 1002 M
0 87 V
-31 -87 R
62 0 V
-62 87 R
62 0 V
276 39 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
276 172 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
277 -145 R
0 109 V
-31 -109 R
62 0 V
-62 109 R
62 0 V
276 99 R
0 133 V
-31 -133 R
62 0 V
-62 133 R
62 0 V
276 37 R
0 120 V
-31 -120 R
62 0 V
-62 120 R
62 0 V
952 1048 Crs
1259 1189 Crs
1566 1481 Crs
1874 1453 Crs
2181 1675 Crs
2488 1837 Crs
2274 693 Crs
1.000 UP
1.000 UL
LT2
LTb
1991 553 M
[ [(Helvetica) 140.0 0.0 true true 0 (sgen1-scores)]
] -46.7 MRshow
LT2
2075 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
952 1070 M
307 127 V
307 148 V
308 134 V
307 151 V
307 197 V
952 997 M
0 132 V
921 997 M
62 0 V
-62 132 R
62 0 V
276 18 R
0 92 V
-31 -92 R
62 0 V
-62 92 R
62 0 V
276 54 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
277 44 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
276 65 R
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
276 97 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
952 1070 Star
1259 1197 Star
1566 1345 Star
1874 1479 Star
2181 1630 Star
2488 1827 Star
2274 553 Star
1.000 UL
LTb
798 2460 N
798 420 L
1844 0 V
0 2040 V
-1844 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 1993 1777 a
 currentpoint currentpoint translate 1 0.58 div 1 0.58 div scale neg
exch neg exch translate
 1993 1777 a 523 1868 a Fu(Fig)o(.)12
b(4.)22 b Ft(T)m(ime)h(gro)n(wth)g(for)f(satis\002able)h(formulas)g
(produced)h(by)f(three)g(generators;)g(\(left\))f Fw(clasp)p
Ft(,)h(a)f(com-)523 1959 y(plete)d(solv)o(er;)g(\(right\))g
Fw(adaptg2wsat2009++)p Ft(,)j(an)d(incomplete)h(solv)o(er)l(.)523
2277 y Fz(that)i(this)g(relationship)f(changes)f(when)i(gro)n(wth)e
(rate)i(is)h(based)e(on)g(the)h(number)e(of)i(literals.)g(The)523
2376 y(\223)p Fd(sgen2del)p Fz(\224)29 b(f)o(amily)f(is)h(belie)n(v)o
(ed)d(by)i(us)g(to)g(contain)f(the)h(hardest)f(kno)n(wn)g(benchmarks)e
(with)523 2476 y(under)19 b(100)g(v)n(ariables)h(and)f(under)g(1000)g
(literals.)648 2590 y(A)k(natural)f(question,)g(since)h(we)h(ha)n(v)o
(e)e(a)i(random)d(element)h(in)h(our)g(generation)e(methods,)h(is)523
2689 y(whether)f(some)h(formulas)f(are)g(intrinsically)h(harder)e(than)
i(others,)f(across)h(a)g(v)n(ariety)g(of)f(solv)o(ers.)523
2789 y(Such)27 b(a)h(correlation)e(is)i(dif)n(\002cult)f(to)h(see)g(in)
g(scatter)g(plots,)f(b)n(ut)g(w)o(as)i(found)d(to)h(be)h(statistically)
523 2889 y(signi\002cant)20 b(in)h(some)g(cases,)g(by)f(analysis)h(of)g
(v)n(ariance.)e(The)h(greater)g(correlation)f(appeared)g(be-)523
2988 y(tween)k Fb(minisat2)d Fz(and)i Fb(clasp)g Fz(\(both)g
(clause-learning)e(solv)o(ers\),)i(while)h(correlation)e(between)523
3088 y Fb(march)p 748 3088 27 4 v 29 w(hi)f Fz(\(a)f(look-ahead)e(solv)
o(er\))h(and)h(either)g(clause-learning)e(solv)o(er)i(w)o(as)h(much)f
(lo)n(wer)-5 b(.)19 b(Ap-)523 3188 y(parently)-5 b(,)15
b(our)h(generated)f(unsatis\002able)i(formulas)f(dif)n(fer)g
Fm(r)o(andomly)f Fz(in)i(dif)n(\002culty)f(across)h(solv)o(er)523
3287 y(styles;)k(no)f(\223killers\224)g(stand)g(out.)648
3401 y(T)l(urning)f(to)h(satis\002able)i(benchmarks,)c(results)j(are)f
(more)g(random,)f(as)i(sho)n(wn)f(by)g(the)h(wider)523
3501 y(error)k(bars)i(in)f(Figure)g(4,)g(compared)f(to)h(Figure)g(2.)g
(The)g(incomplete)f Fb(adapt)g Fz(plo)n(wed)h(through)523
3600 y(them,)20 b(without)f(much)g(dif)n(ference)g(between)g
(generation)f(methods,)h(and)h(with)g(some)n(what)g(irre)o(g-)523
3700 y(ular)c(gro)n(wth)f(in)h(time)g(vs.)h(size.)f(It)g(w)o(as)h(tw)o
(o)g(orders)e(of)h(magnitude)e(f)o(aster)i(than)g(the)g(best)h
(complete)523 3800 y(solv)o(er)22 b(we)g(tested.)h(Ne)n(v)o(ertheless)e
(the)h(plot)g(strongly)f(suggests)i(e)o(xponential)d(gro)n(wth,)g
(although)523 3899 y(at)g(a)g(lo)n(wer)g(rate)f(than)g
Fb(clasp)p Fz(.)f(It)i(is)h(w)o(orth)e(noting)g(that)g(in)h(the)g(SA)-9
b(T)20 b(2009)e(Competition)g([lB09],)523 3999 y Fb(adapt)g
Fz(typically)g(solv)o(ed)h(random)e(3-CNF)j(with)f(4000)f(v)n(ariables)
h(and)g(50,000)e(literals)j(in)f(about)523 4099 y(the)h(same)h(same)f
(it)h(required)d(on)i(our)f(benchmarks)f(with)j(225)e(v)n(ariables)g
(and)h(1350)f(literals.)648 4213 y(Constrained)26 b(by)i(preserving)d
(the)j(underlying)d(3D)j Fp(\(0)p Fo(;)14 b Fp(1\))28
b Fz(design,)f(the)h Fd(sgen2del)h Fz(f)o(amily)523 4312
y(has)i(less)i(randomness)c(than)i(the)g(other)f(f)o(amilies.)h(Our)g
(tentati)n(v)o(e)f(conclusion)g(is)i(that)f(a)g(high)523
4412 y(de)o(gree)25 b(of)h(randomness)f(is)i(more)e(important)g(than)h
(perfection)f(of)h(the)g(structure)g(\(represented)523
4511 y(by)18 b(score)g(0\),)g(for)g(satis\002able)h(formulas.)e(This)h
(contrasts)g(with)h(our)f(observ)n(ation)e(that)i(generating)523
4611 y(unsatis\002able)k(formulas)g(with)g(score)h(0)g(increases)f(the)
h(dif)n(\002culty)e(by)h(a)i(statistically)f(signi\002cant)523
4711 y(amount.)648 4825 y(A)h(specialized)f(solv)o(er)f(called)i
Fb(tts)f Fz(w)o(as)h(also)g(tested)g(brie\003y)-5 b(.)22
b(This)i(solv)o(er)e(is)j(designed)d(for)523 4924 y(small)h(hard)e
(formulas)g([Spe08)n(].)i(The)f(results)g(appear)f(in)i(Figure)e(3.)i
(Notice)f(that,)g(measured)f(by)p eop
%%Page: 10 10
10 9 bop 523 448 a Fz(number)25 b(of)i(v)n(ariables,)g
Fb(clasp)e Fz(time)j(is)g(gro)n(wing)d(f)o(aster)j(for)e(\223)p
Fd(sgen2del)p Fz(,)-6 b(\224)29 b(b)n(ut)e(measured)f(by)523
548 y(number)c(of)i(literals,)h(it)f(is)h(gro)n(wing)e(f)o(aster)h(for)
f(\223)p Fd(scores)p Fz(.)-6 b(\224)23 b(Interestingly)-5
b(,)22 b Fb(tts)h Fz(time)i(gro)n(wth)e(is)523 648 y(about)h(the)h
(same)g(for)f(both)h(generators)e(when)h(measured)g(by)g(number)f(of)i
(literals.)g(This)g(sho)n(ws)523 747 y(that)20 b(se)n(v)o(eral)g
(measures)g(of)f(formula)g(size)i(are)f(useful.)523 983
y Fq(6)99 b(Conclusion)523 1152 y Fz(W)-7 b(e)18 b(introduced)c(a)j
(less)g(stringent)f(class)h(of)g(combinatorial)d(block)h(designs,)h
(called)g(PB01Ds,)h(and)523 1252 y(a)i(ne)n(w)e(combinatorial)f
(structure,)h(called)h(3D)g Fp(\(0)p Fo(;)c Fp(1\))19
b Fz(designs,)e(which)h(serv)o(e)f(as)i(the)f(bases)h(for)e(for)523
1351 y(constraint)23 b(satisf)o(action)g(problems.)f(Additional)h
(information)e(and)i(related)h(\002les)g(are)g(a)n(v)n(ailable)523
1451 y(at)d Fb(http://www.cse.u)o(cs)o(c.)o(edu)o(/)p
Fk(\030)o Fb(avg)o(/S)o(ge)o(n2/)o Fz(.)648 1551 y(W)-7
b(e)20 b(sho)n(wed)f(that)h(the)f(CNF)i(encodings)c(of)j(these)f
(unsatis\002able)h(problems)e(are)h(quite)g(small,)523
1650 y(yet)26 b(e)o(xtremely)f(dif)n(\002cult)g(for)h(their)g(sizes.)h
(The)f(challenge)f(formula)f(mentioned)g(in)j(Section)f(3,)523
1750 y(and)d(a)n(v)n(ailable)f(at)i(the)f(abo)o(v)o(e)f(URL,)i(has)f
(105)f(v)n(ariables)h(and)f(1060)g(literals,)i(b)n(ut)f(no)g(solv)o(er)
f(has)523 1849 y(solv)o(ed)i(it)h(in)g(less)h(than)e(one)g(day)-5
b(,)23 b(so)i(f)o(ar)-5 b(.)25 b(Smaller)f(formulas)g(in)g(the)h(same)g
(f)o(amily)f(ha)n(v)o(e)g(under)523 1949 y(100)c(v)n(ariables)g(and)g
(under)f(1000)g(literals,)i(b)n(ut)g(their)g(dif)n(\002culty)e(\(about)
h(one)g(hour)m(,)f(for)h(complete)523 2049 y(solv)o(ers\))e(is)i
(comparable)c(to)j(random)e(3-CNF)i(formulas)e(with)i(500)f(v)n
(ariables)g(and)g(6375)f(literals,)523 2148 y(or)25 b(lar)o(ger)-5
b(.)24 b(The)h(crafted)f(benchmarks)f(in)i(the)g(SA)-9
b(T)26 b(2009)d(competition)h(that)h(caused)g(an)o(y)f(dif)n(\002-)523
2248 y(culty)17 b(were)g(lar)o(ger)g(still)h(\(other)e(than)h(the)h
Fd(or)q(ig)g Fz(f)o(amily)f(included)f(in)i(this)g(paper)e(for)h
(comparison\).)648 2348 y(Future)27 b(w)o(ork)h(includes)g(better)g
(understanding)d(the)k(structure)e(of)h(3D)h Fp(\(0)p
Fo(;)14 b Fp(1\))28 b Fz(designs)g(and)523 2447 y(in)m(v)o(estigation)
14 b(of)i(whether)f(the)h(f)o(amilies)h(presented)e(in)h(this)h(paper)e
(ha)n(v)o(e)h(a)h(pro)o(v)n(able)d(e)o(xponential)523
2547 y(lo)n(wer)k(bound)e(for)i(resolution.)e(Ho)n(we)n(v)o(er)m(,)g
(it)j(can)f(be)g(sho)n(wn)f(that)i(generated)d(instances)i(based)g(on)
523 2647 y(the)g(\002x)o(ed-bandwidth)d(incidence)h(matrices)i(of)g
(Figure)f(1)i(ha)n(v)o(e)e(polynomial-length)d(refutations.)523
2746 y(Therefore,)j(the)j(random)e(sw)o(apping)h(used)g(in)h(the)g
(actual)f(generation)f(of)h(instances,)h(or)f(a)h(similar)523
2846 y(e)o(xpansion)e(idea,)i(w)o(ould)g(be)g(inte)o(gral)f(to)h
(establishment)f(of)h(an)h(e)o(xponential)c(lo)n(wer)j(bound.)523
3065 y Fn(Ackno)o(wledgment)53 b Fz(W)-7 b(e)30 b(thank)d(Ian)i
(Anderson)d(for)i(helpful)g(email)g(discussions)h(about)e(con-)523
3164 y(structing)19 b(combinatorial)f(designs.)523 3400
y Fq(Refer)n(ences)523 3554 y Ft([And90])86 b(Ian)19
b(Anderson.)27 b Fa(Combinatorial)20 b(Designs:)f(Construction)g
(Methods)p Ft(.)27 b(Ellis)17 b(Horw)o(ood,)j(1990.)523
3637 y([CD96])110 b(C.)22 b(J.)f(Colbourn)i(and)g(J.)e(H.)g(Dinitz,)g
(editors.)37 b Fa(CRC)21 b(Handbook)j(of)e(Combinatorial)h(Designs)p
Ft(.)861 3729 y(CRC)c(Press,)f(Boca)h(Raton,)g(FL,)e(1996.)523
3813 y([ES05])126 b(N.)21 b(E)t(\264)-29 b(en)22 b(and)g(N.)g(S)6
b(\250)-31 b(orensson.)36 b(MiniSat)22 b(\226)f(A)h(SA)-8
b(T)20 b(Solv)o(er)i(with)f(Con\003ict-Clause)g(Minimiza-)861
3904 y(tion.)27 b(In)19 b(Bacchus)h(and)g(W)-6 b(alsh,)18
b(eds.,)g Fa(P)-6 b(oster)o(s)20 b(of)e(the)h(8th)h(SA)m(T)p
Ft(,)e(2005.)523 3988 y([GKNS07])41 b(M.)23 b(Gebser)m(,)g(B.)f
(Kaufmann,)i(A.)e(Neumann,)i(and)f(T)-6 b(.)23 b(Schaub)m(.)40
b(Con\003ict-dri)n(v)o(en)23 b(answer)g(set)861 4079
y(solving.)28 b(In)19 b Fa(IJCAI)p Ft(,)f(pages)h(386\226392.)i(AAAI,)d
(2007.)523 4163 y([K)o(ul07])103 b(O.)22 b(K)o(ullmann.)38
b(Polynomial)23 b(time)f(SA)-8 b(T)21 b(decision)i(for)f
(complementation-in)m(v)n(ariant)i(clause-)861 4254 y(sets,)19
b(and)g(sign-non-singular)i(matrices.)27 b(In)19 b Fa(Pr)m(oc.)f(SA)m
(T)p Ft(,)g(LNCS)g(4501,)i(pp.)f(314\226327,)i(2007.)523
4338 y([lB09])143 b(Daniel)19 b(Le)g(Berre.)26 b(The)19
b(SA)-8 b(T)18 b(competitions.)27 b(http://www)-5 b(.satcompetition.or)
o(g/,)19 b(2009.)523 4422 y([PS09])130 b(Stef)o(an)17
b(Porschen)h(and)g(T)-6 b(atjana)17 b(Schmidt.)22 b(On)17
b(some)h(SA)-8 b(T-v)n(ariants)16 b(o)o(v)o(er)i(linear)f(formulas.)23
b(In)861 4513 y Fa(Pr)m(oc.)c(SOFSEM,)f(LNCS)g(5404)p
Ft(,)i(pages)g(449\226460.)h(Springer)m(,)e(2009.)523
4597 y([Spe08])102 b(Iv)o(or)18 b(Spence.)26 b(tts:)18
b(A)g(SA)-8 b(T-solv)o(er)17 b(for)h(small,)g(dif)n(\002cult)f
(instances.)26 b Fa(J)n(ournal)20 b(on)f(Satis\002ability)l(,)861
4688 y(Boolean)h(Modeling)g(and)g(Computation)p Ft(,)g(4:173\226190,)h
(2008.)523 4772 y([Spe10])102 b(Iv)o(or)17 b(Spence.)24
b(sgen1:)18 b(A)f(generator)h(of)f(small)g(b)o(ut)g(dif)n(\002cult)f
(satis\002ability)h(benchmarks.)24 b Fa(J)n(our)o(-)861
4863 y(nal)c(of)e(Experimental)i(Algorithms)p Ft(,)e(15:1.1\2261.15,)i
(2010.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
